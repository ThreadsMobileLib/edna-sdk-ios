#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
#ifndef THREADS_SWIFT_H
#define THREADS_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Threads",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


@class UIColor;

SWIFT_CLASS("_TtC7Threads10ColorAsset")
@interface ColorAsset : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull accent;)
+ (UIColor * _Nonnull)accent SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull darkTextColor;)
+ (UIColor * _Nonnull)darkTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull labelColor;)
+ (UIColor * _Nonnull)labelColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull lightTextColor;)
+ (UIColor * _Nonnull)lightTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull linkColor;)
+ (UIColor * _Nonnull)linkColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull opaqueSeparatorColor;)
+ (UIColor * _Nonnull)opaqueSeparatorColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull placeholderTextColor;)
+ (UIColor * _Nonnull)placeholderTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull quaternaryLabelColor;)
+ (UIColor * _Nonnull)quaternaryLabelColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull quaternarySystemFillColor;)
+ (UIColor * _Nonnull)quaternarySystemFillColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull secondaryLabelColor;)
+ (UIColor * _Nonnull)secondaryLabelColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull secondarySystemBackgroundColor;)
+ (UIColor * _Nonnull)secondarySystemBackgroundColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull secondarySystemFillColor;)
+ (UIColor * _Nonnull)secondarySystemFillColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull secondarySystemGroupedBackgroundColor;)
+ (UIColor * _Nonnull)secondarySystemGroupedBackgroundColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull separatorColor;)
+ (UIColor * _Nonnull)separatorColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemBackgroundColor;)
+ (UIColor * _Nonnull)systemBackgroundColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemBlueColor;)
+ (UIColor * _Nonnull)systemBlueColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemFillColor;)
+ (UIColor * _Nonnull)systemFillColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemGray2Color;)
+ (UIColor * _Nonnull)systemGray2Color SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemGray3Color;)
+ (UIColor * _Nonnull)systemGray3Color SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemGray4Color;)
+ (UIColor * _Nonnull)systemGray4Color SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemGray5Color;)
+ (UIColor * _Nonnull)systemGray5Color SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemGray6Color;)
+ (UIColor * _Nonnull)systemGray6Color SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemGrayColor;)
+ (UIColor * _Nonnull)systemGrayColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemGreenColor;)
+ (UIColor * _Nonnull)systemGreenColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemGroupedBackgroundColor;)
+ (UIColor * _Nonnull)systemGroupedBackgroundColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemIndigoColor;)
+ (UIColor * _Nonnull)systemIndigoColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemOrangeColor;)
+ (UIColor * _Nonnull)systemOrangeColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemPinkColor;)
+ (UIColor * _Nonnull)systemPinkColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemPurpleColor;)
+ (UIColor * _Nonnull)systemPurpleColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemRedColor;)
+ (UIColor * _Nonnull)systemRedColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemTealColor;)
+ (UIColor * _Nonnull)systemTealColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemYellowColor;)
+ (UIColor * _Nonnull)systemYellowColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull tertiaryLabelColor;)
+ (UIColor * _Nonnull)tertiaryLabelColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull tertiarySystemBackgroundColor;)
+ (UIColor * _Nonnull)tertiarySystemBackgroundColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull tertiarySystemFillColor;)
+ (UIColor * _Nonnull)tertiarySystemFillColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull tertiarySystemGroupedBackgroundColor;)
+ (UIColor * _Nonnull)tertiarySystemGroupedBackgroundColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrAttachButtonColor;)
+ (UIColor * _Nonnull)thrAttachButtonColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrAttachButtonHighlightColor;)
+ (UIColor * _Nonnull)thrAttachButtonHighlightColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrDeletedMessageTextColor;)
+ (UIColor * _Nonnull)thrDeletedMessageTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrEmptyImageColor;)
+ (UIColor * _Nonnull)thrEmptyImageColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrFailedBubbleColor;)
+ (UIColor * _Nonnull)thrFailedBubbleColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrFindMoreMessageTextColor;)
+ (UIColor * _Nonnull)thrFindMoreMessageTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrFindedMessageHeaderBackgroundColor;)
+ (UIColor * _Nonnull)thrFindedMessageHeaderBackgroundColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrFindedMessageHeaderTextColor;)
+ (UIColor * _Nonnull)thrFindedMessageHeaderTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrIncomingBubbleColor;)
+ (UIColor * _Nonnull)thrIncomingBubbleColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrIncomingBubbleLinkColor;)
+ (UIColor * _Nonnull)thrIncomingBubbleLinkColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrIncomingBubbleTextColor;)
+ (UIColor * _Nonnull)thrIncomingBubbleTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrIncomingFileIconTintColor;)
+ (UIColor * _Nonnull)thrIncomingFileIconTintColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrIncomingMediaTimeColor;)
+ (UIColor * _Nonnull)thrIncomingMediaTimeColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrIncomingQuoteAuthorColor;)
+ (UIColor * _Nonnull)thrIncomingQuoteAuthorColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrIncomingQuoteFilesizeColor;)
+ (UIColor * _Nonnull)thrIncomingQuoteFilesizeColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrIncomingQuoteMessageColor;)
+ (UIColor * _Nonnull)thrIncomingQuoteMessageColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrIncomingQuoteSeparatorColor;)
+ (UIColor * _Nonnull)thrIncomingQuoteSeparatorColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrIncomingQuoteTimeColor;)
+ (UIColor * _Nonnull)thrIncomingQuoteTimeColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrIncomingTimeColor;)
+ (UIColor * _Nonnull)thrIncomingTimeColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrLikeLabelOnStarColor;)
+ (UIColor * _Nonnull)thrLikeLabelOnStarColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrLikeLabelUnderStarColor;)
+ (UIColor * _Nonnull)thrLikeLabelUnderStarColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrLikeRatingColorCompleted;)
+ (UIColor * _Nonnull)thrLikeRatingColorCompleted SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrLikeRatingColorDisabled;)
+ (UIColor * _Nonnull)thrLikeRatingColorDisabled SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrLikeRatingColorEnabled;)
+ (UIColor * _Nonnull)thrLikeRatingColorEnabled SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingBubbleColor;)
+ (UIColor * _Nonnull)thrOutgoingBubbleColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingBubbleLinkColor;)
+ (UIColor * _Nonnull)thrOutgoingBubbleLinkColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingBubbleTextColor;)
+ (UIColor * _Nonnull)thrOutgoingBubbleTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingDeliveredStatusColor;)
+ (UIColor * _Nonnull)thrOutgoingDeliveredStatusColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingFileIconTintColor;)
+ (UIColor * _Nonnull)thrOutgoingFileIconTintColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingMediaDeliveredStatusColor;)
+ (UIColor * _Nonnull)thrOutgoingMediaDeliveredStatusColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingMediaPendingStatusColor;)
+ (UIColor * _Nonnull)thrOutgoingMediaPendingStatusColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingMediaReadStatusColor;)
+ (UIColor * _Nonnull)thrOutgoingMediaReadStatusColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingMediaTimeColor;)
+ (UIColor * _Nonnull)thrOutgoingMediaTimeColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingPendingStatusColor;)
+ (UIColor * _Nonnull)thrOutgoingPendingStatusColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingQuoteAuthorColor;)
+ (UIColor * _Nonnull)thrOutgoingQuoteAuthorColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingQuoteFilesizeColor;)
+ (UIColor * _Nonnull)thrOutgoingQuoteFilesizeColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingQuoteMessageColor;)
+ (UIColor * _Nonnull)thrOutgoingQuoteMessageColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingQuoteSeparatorColor;)
+ (UIColor * _Nonnull)thrOutgoingQuoteSeparatorColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingQuoteTimeColor;)
+ (UIColor * _Nonnull)thrOutgoingQuoteTimeColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingReadStatusColor;)
+ (UIColor * _Nonnull)thrOutgoingReadStatusColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingTimeColor;)
+ (UIColor * _Nonnull)thrOutgoingTimeColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrPhotoPickerSheetTextColor;)
+ (UIColor * _Nonnull)thrPhotoPickerSheetTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrPhotoPickerToolbarTintColor;)
+ (UIColor * _Nonnull)thrPhotoPickerToolbarTintColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrPlaceholderSubtitleColor;)
+ (UIColor * _Nonnull)thrPlaceholderSubtitleColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrPlaceholderTitleColor;)
+ (UIColor * _Nonnull)thrPlaceholderTitleColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrQuickReplyBackgroundColor;)
+ (UIColor * _Nonnull)thrQuickReplyBackgroundColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrQuickReplyBackgroundColorHighlighted;)
+ (UIColor * _Nonnull)thrQuickReplyBackgroundColorHighlighted SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrQuickReplyBorder;)
+ (UIColor * _Nonnull)thrQuickReplyBorder SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrQuickReplyTextColor;)
+ (UIColor * _Nonnull)thrQuickReplyTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrQuickReplyTextColorHighLighted;)
+ (UIColor * _Nonnull)thrQuickReplyTextColorHighLighted SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrQuoteAccentColor;)
+ (UIColor * _Nonnull)thrQuoteAccentColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrQuoteAuthorColor;)
+ (UIColor * _Nonnull)thrQuoteAuthorColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrQuoteBackgroundColor;)
+ (UIColor * _Nonnull)thrQuoteBackgroundColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrQuoteMessageColor;)
+ (UIColor * _Nonnull)thrQuoteMessageColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrRefreshColor;)
+ (UIColor * _Nonnull)thrRefreshColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrScheduleAlertColor;)
+ (UIColor * _Nonnull)thrScheduleAlertColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrScheduleIconBackgroundColor;)
+ (UIColor * _Nonnull)thrScheduleIconBackgroundColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrScrollToBottomBadgeColor;)
+ (UIColor * _Nonnull)thrScrollToBottomBadgeColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrScrollToBottomBadgeTextColor;)
+ (UIColor * _Nonnull)thrScrollToBottomBadgeTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrSearchBarTextColor;)
+ (UIColor * _Nonnull)thrSearchBarTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrSearchBarTintColor;)
+ (UIColor * _Nonnull)thrSearchBarTintColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrSearchMessageAuthorTextColor;)
+ (UIColor * _Nonnull)thrSearchMessageAuthorTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrSearchMessageDateTextColor;)
+ (UIColor * _Nonnull)thrSearchMessageDateTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrSearchMessageFileTextColor;)
+ (UIColor * _Nonnull)thrSearchMessageFileTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrSearchMessageMatchTextColor;)
+ (UIColor * _Nonnull)thrSearchMessageMatchTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrSearchMessageTextColor;)
+ (UIColor * _Nonnull)thrSearchMessageTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrSearchScopeBarTintColor;)
+ (UIColor * _Nonnull)thrSearchScopeBarTintColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrSendButtonColor;)
+ (UIColor * _Nonnull)thrSendButtonColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrSendButtonDisabledColor;)
+ (UIColor * _Nonnull)thrSendButtonDisabledColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrSendButtonHighlightColor;)
+ (UIColor * _Nonnull)thrSendButtonHighlightColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrSpecialisConnectSubtitleColor;)
+ (UIColor * _Nonnull)thrSpecialisConnectSubtitleColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrSpecialisConnectTitleColor;)
+ (UIColor * _Nonnull)thrSpecialisConnectTitleColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrStarRatingColorCompleted;)
+ (UIColor * _Nonnull)thrStarRatingColorCompleted SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrStarRatingColorDisabled;)
+ (UIColor * _Nonnull)thrStarRatingColorDisabled SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrStarRatingColorEnabled;)
+ (UIColor * _Nonnull)thrStarRatingColorEnabled SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrSurveyCompletionColor;)
+ (UIColor * _Nonnull)thrSurveyCompletionColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrSurveyTextColor;)
+ (UIColor * _Nonnull)thrSurveyTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrTimeAndStatusBackgroundColor;)
+ (UIColor * _Nonnull)thrTimeAndStatusBackgroundColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrToolbarQuotedMessageAuthorColor;)
+ (UIColor * _Nonnull)thrToolbarQuotedMessageAuthorColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrToolbarQuotedMessageColor;)
+ (UIColor * _Nonnull)thrToolbarQuotedMessageColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrToolbarTintColor;)
+ (UIColor * _Nonnull)thrToolbarTintColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrTypingTextColor;)
+ (UIColor * _Nonnull)thrTypingTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrWaitingSpecialistBgColor;)
+ (UIColor * _Nonnull)thrWaitingSpecialistBgColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrWaitingSpecialistBorderColor;)
+ (UIColor * _Nonnull)thrWaitingSpecialistBorderColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrWaitingSpecialistSpinnerColor;)
+ (UIColor * _Nonnull)thrWaitingSpecialistSpinnerColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrjsqFileViewerColor;)
+ (UIColor * _Nonnull)thrjsqFileViewerColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrjsqMessageBubbleBlueColor;)
+ (UIColor * _Nonnull)thrjsqMessageBubbleBlueColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrjsqMessageBubbleGreenColor;)
+ (UIColor * _Nonnull)thrjsqMessageBubbleGreenColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrjsqMessageBubbleLightGrayColor;)
+ (UIColor * _Nonnull)thrjsqMessageBubbleLightGrayColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrjsqMessageBubbleRedColor;)
+ (UIColor * _Nonnull)thrjsqMessageBubbleRedColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrjsqNavigationBarColor;)
+ (UIColor * _Nonnull)thrjsqNavigationBarColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrjsqTypingIndicatorBubbleColor;)
+ (UIColor * _Nonnull)thrjsqTypingIndicatorBubbleColor SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSURL;
@class UIImage;
@class NSData;
@class NSError;

SWIFT_CLASS_NAMED("DownloadDataRequest")
@interface THRDownloadDataRequest : NSObject
- (void)downloadAndSaveFileFromURL:(NSURL * _Nonnull)url completionHandler:(void (^ _Nonnull)(NSURL * _Nullable, NSError * _Nullable))completionHandler progressHandler:(void (^ _Nullable)(CGFloat))progressHandler;
- (void)downloadImageFromURL:(NSURL * _Nonnull)url completionHandler:(void (^ _Nonnull)(UIImage * _Nullable, NSError * _Nullable))completionHandler;
- (void)downloadDataFromURL:(NSURL * _Nonnull)url completionHandler:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completionHandler progressHandler:(void (^ _Nullable)(CGFloat))progressHandler;
- (void)cancelDownload;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSCoder;

SWIFT_CLASS("_TtC7Threads15EDNAPreloadView")
@interface EDNAPreloadView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)_ OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
- (void)startAnimating;
- (void)stopAnimating;
@end


@class NSString;

@interface NSFileManager (SWIFT_EXTENSION(Threads))
/// Метод для сохранения данных в локальный кеш
/// \param data Данные для сохранения
///
/// \param name Имя файла <em>Название файла и ресурса в ДС могут отличаться!!!!</em>
///
///
/// returns:
/// Путь до сохраненного файла или nil при ошибке
- (NSURL * _Nullable)saveDataWithData:(NSData * _Nonnull)data toCacheFile:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
/// Метод для получения ссылкииз кеша  до указанного файла
/// \param name Имя файла для поиска
///
///
/// returns:
/// Ссылка или nil если такого файла нет
- (NSURL * _Nullable)getURLForCachedFile:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
/// Метод для получения данных из кеша по имени файла
/// \param name Имя файла для поиска в кеше
///
///
/// returns:
/// Данные файла или nil
- (NSData * _Nullable)getDataForCachedFile:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
/// Метод для удаления временных папок
- (void)deleteCache;
@end


SWIFT_CLASS("_TtC7Threads12HttpSettings")
@interface HttpSettings : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// таймаут установления нового соединения
@property (nonatomic) NSTimeInterval connectTimeoutSec;
/// таймаут операций загрузки
@property (nonatomic) NSTimeInterval downloadTimeoutSec;
/// таймаут операций выгрузки
@property (nonatomic) NSTimeInterval uploadTimeoutSec;
@property (nonatomic, readonly, copy) NSString * _Nonnull debugDescription;
@end


SWIFT_CLASS("_TtC7Threads10ImageAsset")
@interface ImageAsset : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull searchButton;)
+ (UIImage * _Nonnull)searchButton SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull backButton;)
+ (UIImage * _Nonnull)backButton SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull bubbleMin;)
+ (UIImage * _Nonnull)bubbleMin SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull bubbleStroked;)
+ (UIImage * _Nonnull)bubbleStroked SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull chatPlaceholder;)
+ (UIImage * _Nonnull)chatPlaceholder SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull checkmark;)
+ (UIImage * _Nonnull)checkmark SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull closeButton;)
+ (UIImage * _Nonnull)closeButton SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull defaultProfile;)
+ (UIImage * _Nonnull)defaultProfile SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull doubleCheckmark;)
+ (UIImage * _Nonnull)doubleCheckmark SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull emptyCheckmark;)
+ (UIImage * _Nonnull)emptyCheckmark SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull forward;)
+ (UIImage * _Nonnull)forward SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull icClip;)
+ (UIImage * _Nonnull)icClip SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull icDislikeEmpty;)
+ (UIImage * _Nonnull)icDislikeEmpty SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull icDislikeFull;)
+ (UIImage * _Nonnull)icDislikeFull SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull icEditied;)
+ (UIImage * _Nonnull)icEditied SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull icFile;)
+ (UIImage * _Nonnull)icFile SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull icKeyboardHide;)
+ (UIImage * _Nonnull)icKeyboardHide SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull icKeyboardShow;)
+ (UIImage * _Nonnull)icKeyboardShow SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull icLikeEmpty;)
+ (UIImage * _Nonnull)icLikeEmpty SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull icLikeFull;)
+ (UIImage * _Nonnull)icLikeFull SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull icStarRatingEmpty;)
+ (UIImage * _Nonnull)icStarRatingEmpty SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull icStarRatingFull;)
+ (UIImage * _Nonnull)icStarRatingFull SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull notFound;)
+ (UIImage * _Nonnull)notFound SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull pendingMark;)
+ (UIImage * _Nonnull)pendingMark SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull prechatError;)
+ (UIImage * _Nonnull)prechatError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull scheduleAlert;)
+ (UIImage * _Nonnull)scheduleAlert SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull scrollDownButton;)
+ (UIImage * _Nonnull)scrollDownButton SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull sentCheckmark;)
+ (UIImage * _Nonnull)sentCheckmark SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull thrjsqAlert;)
+ (UIImage * _Nonnull)thrjsqAlert SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull thrjsqArrowDown;)
+ (UIImage * _Nonnull)thrjsqArrowDown SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull thrjsqArrowUp;)
+ (UIImage * _Nonnull)thrjsqArrowUp SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull thrjsqBubbleMin;)
+ (UIImage * _Nonnull)thrjsqBubbleMin SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull thrjsqBubbleStroked;)
+ (UIImage * _Nonnull)thrjsqBubbleStroked SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull thrjsqClip;)
+ (UIImage * _Nonnull)thrjsqClip SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull thrjsqFile;)
+ (UIImage * _Nonnull)thrjsqFile SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull thrjsqGroup2;)
+ (UIImage * _Nonnull)thrjsqGroup2 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull thrjsqGroup4;)
+ (UIImage * _Nonnull)thrjsqGroup4 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull thrjsqLoading;)
+ (UIImage * _Nonnull)thrjsqLoading SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull thrjsqMicrophone;)
+ (UIImage * _Nonnull)thrjsqMicrophone SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull thrjsqPause;)
+ (UIImage * _Nonnull)thrjsqPause SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull thrjsqPlay;)
+ (UIImage * _Nonnull)thrjsqPlay SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull thrjsqPlay1;)
+ (UIImage * _Nonnull)thrjsqPlay1 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull thrjsqShield;)
+ (UIImage * _Nonnull)thrjsqShield SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull thrjsqTyping;)
+ (UIImage * _Nonnull)thrjsqTyping SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol LoadingChatViewControllerDelegate;
@class NSBundle;

SWIFT_CLASS("_TtC7Threads25LoadingChatViewController")
@interface LoadingChatViewController : UIViewController
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
@property (nonatomic, weak) id <LoadingChatViewControllerDelegate> _Nullable delegate;
@property (nonatomic) NSError * _Nullable error;
- (void)loadView;
- (void)startTimer;
- (void)stopTimer;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_PROTOCOL("_TtP7Threads33LoadingChatViewControllerDelegate_")
@protocol LoadingChatViewControllerDelegate <NSObject>
/// Метод для проверки наличия ошибки при загрузке и ее отображения
- (void)checkLoadingError;
- (void)repeatInitChat;
@end


SWIFT_CLASS("_TtC7Threads12Localization")
@interface Localization : NSObject
+ (NSString * _Nonnull)localizeWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)localizeWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7Threads18LocalizationConfig")
@interface LocalizationConfig : NSObject
- (nonnull instancetype)initWithBundle:(NSBundle * _Nonnull)bundle tableName:(NSString * _Nonnull)tableName OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, strong) NSBundle * _Nonnull bundle;
@property (nonatomic, readonly, copy) NSString * _Nonnull tableName;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol MessagesLoadEarlierHeaderViewDelegate;
@class UIButton;

SWIFT_CLASS("_TtC7Threads29MessagesLoadEarlierHeaderView")
@interface MessagesLoadEarlierHeaderView : UICollectionReusableView
- (nonnull instancetype)initWithFrame:(CGRect)_ SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat kTHRJSQMessagesLoadEarlierHeaderViewHeight;)
+ (CGFloat)kTHRJSQMessagesLoadEarlierHeaderViewHeight SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull headerReuseIdentifier;)
+ (NSString * _Nonnull)headerReuseIdentifier SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, weak) id <MessagesLoadEarlierHeaderViewDelegate> _Nullable delegate;
@property (nonatomic, readonly, strong) UIButton * _Nonnull loadButton;
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
@end


SWIFT_PROTOCOL("_TtP7Threads37MessagesLoadEarlierHeaderViewDelegate_")
@protocol MessagesLoadEarlierHeaderViewDelegate <NSObject>
- (void)headerView:(MessagesLoadEarlierHeaderView * _Nonnull)headerView didPressLoadButton:(UIButton * _Nonnull)sender;
@end






@interface NSError (SWIFT_EXTENSION(Threads))
/// Метод для создания ошибки СДК с описанием (с дефолтным кодом -1000)
/// \param description Описание ошибки
///
///
/// returns:
/// Ошибка
+ (NSError * _Nonnull)applicationErrorWith:(NSString * _Nonnull)description SWIFT_WARN_UNUSED_RESULT;
/// Метод для создания ошибки СДК с ее кодом описанием
/// \param code Код ошибки
///
/// \param description Описание ошибки
///
///
/// returns:
/// Ошибка
+ (NSError * _Nonnull)applicationErrorWith:(NSInteger)code and:(NSString * _Nonnull)description SWIFT_WARN_UNUSED_RESULT;
@end





SWIFT_CLASS("_TtC7Threads12PushUserInfo")
@interface PushUserInfo : NSObject
- (nullable instancetype)initFrom:(NSDictionary<NSString *, id> * _Nonnull)pushUserInfo OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nonnull alert;
@property (nonatomic, readonly) NSInteger skillId;
@property (nonatomic, readonly, copy) NSString * _Nonnull expiredAt;
@property (nonatomic, readonly, copy) NSString * _Nonnull chlSentAt;
@property (nonatomic, readonly, copy) NSString * _Nonnull campaign;
@property (nonatomic, readonly) NSInteger priority;
@property (nonatomic, readonly, copy) NSString * _Nonnull senderName;
@property (nonatomic, readonly, copy) NSString * _Nullable chatMessageId;
+ (BOOL)checkMinimumPushFrom:(NSDictionary<NSString *, id> * _Nonnull)pushUserInfo SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7Threads10QuickReply")
@interface QuickReply : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UICollectionView;
@protocol QuickReplyCellDelegate;
@class UITraitCollection;

SWIFT_CLASS("_TtC7Threads14QuickReplyCell")
@interface QuickReplyCell : UICollectionViewCell
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) QuickReplyCell * _Nonnull sizingCell;)
+ (QuickReplyCell * _Nonnull)sizingCell SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) UICollectionView * _Nullable colView;
+ (NSString * _Nonnull)cellIdentifier SWIFT_WARN_UNUSED_RESULT;
- (void)configureWithQuickReply:(QuickReply * _Nonnull)quickReply delegate:(id <QuickReplyCellDelegate> _Nonnull)delegate;
- (void)setWidth:(CGFloat)_;
- (void)prepareForReuse;
- (void)layoutSubviews;
- (CGSize)getSizeWithWidth:(CGFloat)width SWIFT_WARN_UNUSED_RESULT;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
@end


///
SWIFT_PROTOCOL("_TtP7Threads22QuickReplyCellDelegate_")
@protocol QuickReplyCellDelegate
/// \param quickReply 
///
- (void)didSelectQuickReply:(QuickReply * _Nonnull)quickReply;
@end


SWIFT_CLASS("_TtC7Threads12SQActionCell")
@interface SQActionCell : UICollectionViewCell
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
- (void)configureWithActionString:(NSString * _Nonnull)actionString;
@end


SWIFT_CLASS("_TtC7Threads11SQAlbumCell")
@interface SQAlbumCell : UITableViewCell
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
- (void)startLoading;
- (void)stopLoading;
- (void)updateImage:(UIImage * _Nullable)image;
- (void)configureWithAlbumName:(NSString * _Nonnull)albumName photosCount:(NSInteger)photosCount;
@end


SWIFT_CLASS("_TtC7Threads18SQPhotoPreviewCell")
@interface SQPhotoPreviewCell : UICollectionViewCell
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC7Threads13SQPreviewCell")
@interface SQPreviewCell : UICollectionViewCell
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
@end

/// Настройка поиска
typedef SWIFT_ENUM(NSUInteger, SearchScope, open) {
  SearchScopeAll = 0,
  SearchScopeImages = 1,
  SearchScopeFiles = 2,
  SearchScopeCount = 3,
};

/// Состояние для кнопки
typedef SWIFT_ENUM(NSUInteger, SearchState, open) {
  SearchStateIdle = 0,
  SearchStateLoading = 1,
};


SWIFT_CLASS("_TtC7Threads32SearchingForSpecialistFooterView")
@interface SearchingForSpecialistFooterView : UICollectionReusableView
- (nonnull instancetype)initWithFrame:(CGRect)_ SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat footerViewHeight;)
+ (CGFloat)footerViewHeight SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull footerReuseIdentifier;)
+ (NSString * _Nonnull)footerReuseIdentifier SWIFT_WARN_UNUSED_RESULT;
+ (void)setFooterReuseIdentifier:(NSString * _Nonnull)value;
- (void)configureWithDefaultSettingsforCollectionView:(UICollectionView * _Nonnull)collectionView;
@end


SWIFT_CLASS("_TtC7Threads14SocketSettings")
@interface SocketSettings : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// интервал ожидания отправки сообщения
@property (nonatomic) NSInteger sendIntervalSec;
/// интервал повторной попытки отправки сообщения
@property (nonatomic) NSTimeInterval resendIntervalSec;
/// интервал запросов поддержания активной соединения
@property (nonatomic) NSTimeInterval resendPingIntervalSec;
/// таймаут установления нового соединения
@property (nonatomic) NSTimeInterval connectTimeoutSec;
/// таймаут операций чтения для нового соединения
@property (nonatomic) NSTimeInterval readTimeoutSec;
/// таймаут операций записи для нового соединения
@property (nonatomic) NSTimeInterval writeTimeoutSec;
@property (nonatomic, readonly, copy) NSString * _Nonnull debugDescription;
@end

@protocol StarRateViewDelegate;

SWIFT_CLASS("_TtC7Threads12StarRateView")
@interface StarRateView : UIView
- (nonnull instancetype)init;
- (nonnull instancetype)initWithMinimumValue:(NSUInteger)minimumValue maximumValue:(NSUInteger)maximumValue;
- (nonnull instancetype)initWithMinimumValue:(NSUInteger)minimumValue maximumValue:(NSUInteger)maximumValue value:(NSUInteger)value spacing:(CGFloat)spacing emptyStarImage:(UIImage * _Nullable)emptyStarImage emptyStarColor:(UIColor * _Nonnull)emptyStarColor filledStarImage:(UIImage * _Nullable)filledStarImage fullStarColor:(UIColor * _Nonnull)fullStarColor OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
@property (nonatomic, weak) id <StarRateViewDelegate> _Nullable delegate;
@property (nonatomic) NSUInteger maximumValue;
@property (nonatomic) NSUInteger minimumValue;
@property (nonatomic) CGFloat spacing;
@property (nonatomic, strong) UIImage * _Nullable emptyStarImage;
@property (nonatomic, strong) UIColor * _Nonnull emptyStarColor;
@property (nonatomic, strong) UIImage * _Nullable filledStarImage;
@property (nonatomic, strong) UIColor * _Nonnull fullStarColor;
@property (nonatomic) NSUInteger value;
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (void)drawRect:(CGRect)rect;
- (void)setNeedsLayout;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_PROTOCOL("_TtP7Threads20StarRateViewDelegate_")
@protocol StarRateViewDelegate <NSObject>
- (void)valueDidChangeWithSender:(StarRateView * _Nonnull)sender;
@end

typedef SWIFT_ENUM(NSUInteger, THRAPIVersion, open) {
  THRAPIVersionApi15 = 16,
  THRAPIVersionApi17 = 17,
  THRAPIVersionApi18 = 18,
};

@class UIFont;
@class THRSettingsShadow;
enum THRQuickReplyPresentationMode : NSUInteger;
enum THRQuickReplyAlignment : NSUInteger;
@class NSNumber;
@class THRCert;
@class ThreadsLogLevel;

SWIFT_CLASS("_TtC7Threads13THRAttributes")
@interface THRAttributes : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) LocalizationConfig * _Nullable localizationConfig;
/// Works properly for non view controller based status bar appearance
@property (nonatomic) UIStatusBarStyle statusBarStyle;
@property (nonatomic, strong) UIColor * _Nonnull refreshColor;
@property (nonatomic) BOOL navigationBarVisible;
@property (nonatomic) BOOL navigationBarCustomizeTitle;
@property (nonatomic, copy) NSString * _Nullable navigationBarTitle;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarTitleColor;
@property (nonatomic, strong) UIFont * _Nonnull navigationBarTitleFont;
@property (nonatomic, strong) UIFont * _Nonnull navigationBarSubtitleFont;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarSubtitleColor;
@property (nonatomic) BOOL navigationBarSubtitleShowOrgUnit;
@property (nonatomic) BOOL navigationBarSubtitleVisible;
@property (nonatomic) BOOL navigationBarLarge;
@property (nonatomic) BOOL navigationBarKeyboardControlVisible;
@property (nonatomic, strong) UIImage * _Nullable navigationBarKeyboardShowImage;
@property (nonatomic, strong) UIImage * _Nullable navigationBarKeyboardHideImage;
@property (nonatomic) BOOL navigationBarShadow;
@property (nonatomic, strong) THRSettingsShadow * _Nonnull navigationBarShadowSettings;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarBackButtonColor;
@property (nonatomic) BOOL launchViewEnable;
@property (nonatomic, strong) UIColor * _Nonnull launchActivityViewColor;
@property (nonatomic, strong) UIColor * _Nonnull launchViewBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull launchViewInnerBoxBackgroundColor;
@property (nonatomic) CGFloat launchViewInnerBoxCornerRadius;
@property (nonatomic) CGSize launchViewInnerBoxSize SWIFT_DEPRECATED_MSG("Используйте для задания минимального размера launchViewMinSize");
@property (nonatomic) CGSize launchViewMinSize;
@property (nonatomic, strong) UIColor * _Nonnull launchViewTextColor;
@property (nonatomic, strong) UIFont * _Nonnull launchViewTextFont;
@property (nonatomic, strong) UIImage * _Nullable loadingChatErrorImageWithCodeFrom400to599;
@property (nonatomic, strong) UIImage * _Nullable loadingChatErrorImage;
@property (nonatomic, strong) UIFont * _Nonnull loadingChatTitleFont;
@property (nonatomic, strong) UIColor * _Nonnull loadingChatTitleColor;
@property (nonatomic, strong) UIFont * _Nonnull loadingChatSubtitleFont;
@property (nonatomic, strong) UIColor * _Nonnull loadingChatSubtitleColor;
@property (nonatomic, strong) UIFont * _Nonnull loadingChatRepeatButtonTitleFont;
@property (nonatomic, strong) UIColor * _Nonnull loadingChatRepeatButtonTitleColor;
@property (nonatomic, strong) UIColor * _Nonnull loadingChatRepeatButtonBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIImage * _Nullable placeholderImage;
@property (nonatomic, strong) UIColor * _Nonnull placeholderTitleColor;
@property (nonatomic, strong) UIColor * _Nonnull placeholderSubtitleColor;
@property (nonatomic, strong) UIFont * _Nonnull placeholderTitleFont;
@property (nonatomic, strong) UIFont * _Nonnull placeholderSubtitleFont;
@property (nonatomic) BOOL imageEdgesActived;
@property (nonatomic) UIEdgeInsets imageEdges;
@property (nonatomic) CGFloat imageCornerRadius;
@property (nonatomic, strong) UIColor * _Nonnull toolbarbackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull toolbarSeparatorLineColor;
@property (nonatomic, strong) UIColor * _Nonnull toolbarTintColor;
@property (nonatomic, strong) UIImage * _Nullable attachButtonImage;
@property (nonatomic, strong) UIColor * _Nonnull attachButtonColor;
@property (nonatomic, strong) UIColor * _Nonnull attachButtonHighlightColor;
@property (nonatomic) BOOL showAttachButton;
@property (nonatomic, strong) UIColor * _Nonnull sendButtonColor;
@property (nonatomic, strong) UIColor * _Nonnull sendButtonHighlightColor;
@property (nonatomic, strong) UIColor * _Nonnull sendButtonDisabledColor;
@property (nonatomic, strong) UIFont * _Nonnull sendButtonFont;
@property (nonatomic, strong) UIImage * _Nullable sendButtonImage;
@property (nonatomic, strong) UIFont * _Nonnull myMessageFont;
@property (nonatomic, strong) UIFont * _Nonnull toolbarQuotedMessageAuthorFont;
@property (nonatomic, strong) UIFont * _Nonnull toolbarQuotedMessageFont;
@property (nonatomic, strong) UIColor * _Nonnull toolbarQuotedMessageAuthorColor;
@property (nonatomic, strong) UIColor * _Nonnull toolbarQuotedMessageColor;
@property (nonatomic) BOOL toolbarInputHasBorder;
@property (nonatomic) CGFloat toolbarInputCornerRadius;
@property (nonatomic) CGFloat toolbarInputMinimumHeight;
@property (nonatomic) CGFloat toolbarInputMaximumHeight;
@property (nonatomic, strong) UIColor * _Nonnull toolbarInputTextColor;
@property (nonatomic, strong) UIColor * _Nonnull toolbarInputCursorColor;
@property (nonatomic, strong) UIColor * _Nonnull toolbarInputBackgroundColor;
@property (nonatomic) BOOL showWaitingForSpecialistProgress;
@property (nonatomic, strong) UIColor * _Nonnull waitingSpecialistSpinnerColor;
@property (nonatomic, strong) UIColor * _Nonnull waitingSpecialistBgColor;
@property (nonatomic, strong) UIColor * _Nonnull waitingSpecialistBorderColor;
@property (nonatomic) CGFloat waitingSpecialistBorderWidth;
@property (nonatomic, strong) UIFont * _Nonnull bubbleMessageFont;
@property (nonatomic, strong) UIFont * _Nonnull bubbleMessageAudioFont;
@property (nonatomic, strong) UIFont * _Nonnull bubbleTimeFont;
@property (nonatomic, strong) UIFont * _Nonnull failedMessageFont;
@property (nonatomic, strong) UIFont * _Nonnull messageHeaderFont;
@property (nonatomic, strong) UIColor * _Nonnull messageHeaderTextColor;
@property (nonatomic, strong) UIColor * _Nonnull messageDeletedTextColor;
@property (nonatomic, strong) UIImage * _Nullable messageEditedStatusImage;
@property (nonatomic, strong) UIFont * _Nonnull quoteAuthorFont;
@property (nonatomic, strong) UIFont * _Nonnull quoteMessageFont;
@property (nonatomic, strong) UIFont * _Nonnull quoteTimeFont;
@property (nonatomic, strong) UIFont * _Nonnull quoteFilesizeFont;
@property (nonatomic, strong) UIColor * _Nonnull quoteAuthorColor;
@property (nonatomic, strong) UIColor * _Nonnull quoteMessageColor;
@property (nonatomic, strong) UIColor * _Nonnull quoteBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull quoteAccentColor;
@property (nonatomic, strong) UIImage * _Nullable messageBubbleFilledMaskImage;
@property (nonatomic, strong) UIImage * _Nullable messageBubbleStrokedMaskImage;
@property (nonatomic) UIEdgeInsets messageBubbleFilledMaskInsets;
@property (nonatomic) UIEdgeInsets messageBubbleStrokedMaskInsets;
@property (nonatomic) CGFloat messageContainerRightOffset;
@property (nonatomic) CGFloat messageContainerLeftOffset;
/// Right value sets margin to the avatar image
/// Left value sets margin on the side opposite the avatar image
@property (nonatomic) UIEdgeInsets messageBubbleTextViewFrameInsets;
@property (nonatomic) UIEdgeInsets messageBubbleTextViewTextContainerInsets;
@property (nonatomic) CGFloat messageBubbleOppositeMargin;
@property (nonatomic, strong) UIColor * _Nonnull emptyImageColor;
@property (nonatomic, strong) UIColor * _Nonnull timeAndStatusBackgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull specialisConnectTitleFont;
@property (nonatomic, strong) UIFont * _Nonnull specialisConnectSubtitleFont;
@property (nonatomic, strong) UIColor * _Nonnull specialisConnectTitleColor;
@property (nonatomic, strong) UIColor * _Nonnull specialisConnectSubtitleColor;
@property (nonatomic, strong) UIFont * _Nonnull typingTextFont;
@property (nonatomic, strong) UIColor * _Nonnull typingTextColor;
@property (nonatomic, copy) NSString * _Nullable typingText;
@property (nonatomic, strong) UIColor * _Nullable typingIndicatorEllipsisColor;
@property (nonatomic, strong) UIImage * _Nullable scheduleIcon;
@property (nonatomic, strong) UIColor * _Nonnull scheduleAlertColor;
@property (nonatomic, strong) UIFont * _Nonnull scheduleAlertFont;
@property (nonatomic, strong) UIColor * _Nonnull scheduleIconBackgroundColor;
@property (nonatomic) BOOL scrollToLatest;
@property (nonatomic, strong) UIImage * _Nullable scrollToBottomImage;
@property (nonatomic, strong) UIColor * _Nonnull scrollToBottomBadgeColor;
@property (nonatomic, strong) UIColor * _Nonnull scrollToBottomBadgeTextColor;
@property (nonatomic) BOOL incomingBubbleStroked;
@property (nonatomic, strong) UIColor * _Nonnull incomingBubbleColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingBubbleTextColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingBubbleLinkColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingTimeColor;
@property (nonatomic) BOOL showIncomingAvatar;
@property (nonatomic, strong) UIColor * _Nonnull incomingQuoteSeparatorColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingQuoteAuthorColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingQuoteMessageColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingQuoteTimeColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingQuoteFilesizeColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingFileIconTintColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingFileIconBgColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingMediaTimeColor;
@property (nonatomic) CGFloat commonMessageAvatarSize;
@property (nonatomic) CGFloat systemMessageAvatarSize;
@property (nonatomic) CGFloat messageAvatarToBubbleOffset;
@property (nonatomic) BOOL failedBubbleStroked;
@property (nonatomic, strong) UIColor * _Nonnull failedBubbleColor;
@property (nonatomic) BOOL outgoingBubbleStroked;
@property (nonatomic, strong) UIColor * _Nonnull outgoingBubbleColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingBubbleTextColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingBubbleLinkColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingTimeColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingPendingStatusColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingDeliveredStatusColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingReadStatusColor;
@property (nonatomic, strong) UIImage * _Nullable outgoingPendingStatusImage;
@property (nonatomic, strong) UIImage * _Nullable outgoingDeliveredStatusImage;
@property (nonatomic, strong) UIImage * _Nullable outgoingReadStatusImage;
@property (nonatomic) BOOL showOutgoingAvatar;
@property (nonatomic, strong) UIImage * _Nullable avatarPlaceholderImage;
@property (nonatomic, strong) UIColor * _Nonnull outgoingQuoteSeparatorColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingQuoteAuthorColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingQuoteMessageColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingQuoteTimeColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingQuoteFilesizeColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingFileIconTintColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingFileIconBgColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingMediaTimeColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingMediaPendingStatusColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingMediaDeliveredStatusColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingMediaReadStatusColor;
@property (nonatomic, strong) UIColor * _Nonnull searchScopeBarTintColor;
@property (nonatomic, strong) UIColor * _Nonnull searchBarTextColor;
@property (nonatomic, strong) UIColor * _Nonnull searchBarTintColor;
@property (nonatomic, strong) UIFont * _Nonnull searchScopeBarFont;
@property (nonatomic, strong) UIFont * _Nonnull searchBarTextFont;
@property (nonatomic, strong) UIColor * _Nonnull searchBarIconTintColor;
@property (nonatomic) BOOL searchEnabled;
@property (nonatomic, strong) UIImage * _Nullable searchImageNotFound;
@property (nonatomic, strong) UIColor * _Nonnull searchTextColorNotFound;
@property (nonatomic, strong) UIFont * _Nonnull searchTextFontColorNotFound;
@property (nonatomic) BOOL searchIconDisabled;
@property (nonatomic, strong) UIImage * _Nullable clearSearchIcon;
@property (nonatomic, strong) UIColor * _Nonnull findedMessageHeaderTextColor;
@property (nonatomic, strong) UIColor * _Nonnull findedMessageHeaderBackgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull findedMessageHeaderTextFont;
@property (nonatomic, strong) UIColor * _Nonnull findMoreMessageTextColor;
@property (nonatomic, strong) UIFont * _Nonnull findMoreMessageTextFont;
@property (nonatomic, strong) UIColor * _Nonnull searchMessageAuthorTextColor;
@property (nonatomic, strong) UIColor * _Nonnull searchMessageTextColor;
@property (nonatomic, strong) UIColor * _Nonnull searchMessageDateTextColor;
@property (nonatomic, strong) UIColor * _Nonnull searchMessageFileTextColor;
@property (nonatomic, strong) UIColor * _Nonnull searchMessageMatchTextColor;
@property (nonatomic, strong) UIFont * _Nonnull searchMessageAuthorTextFont;
@property (nonatomic, strong) UIFont * _Nonnull searchMessageMatchTextFont;
@property (nonatomic, strong) UIFont * _Nonnull searchMessageTextFont;
@property (nonatomic, strong) UIFont * _Nonnull searchMessageFileTextFont;
@property (nonatomic, strong) UIFont * _Nonnull searchMessageDateTextFont;
/// Включает | Выключает загрузку  ссылок как превью
@property (nonatomic) BOOL linkPreviewEnabled;
@property (nonatomic, strong) UIColor * _Nonnull photoPickerBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull photoPickerToolbarTintColor;
@property (nonatomic, strong) UIFont * _Nonnull photoPickerToolbarButtonFont;
@property (nonatomic, strong) UIImage * _Nullable photoPickerCheckmarkIcon;
@property (nonatomic, strong) UIImage * _Nullable photoPickerEmptyCheckmarkIcon;
@property (nonatomic, strong) UIColor * _Nonnull photoPickerSheetTextColor;
@property (nonatomic, strong) UIFont * _Nonnull photoPickerSheetTextFont;
@property (nonatomic) BOOL useSystemFilePicker;
@property (nonatomic, strong) UIColor * _Nullable fileViewerTitleColor;
@property (nonatomic, strong) UIColor * _Nullable fileViewerNavBarBackgroundColor;
@property (nonatomic, strong) UIColor * _Nullable fileViewerNavBarTintColor;
@property (nonatomic, strong) UIColor * _Nonnull fileViewerBackgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull fileViewerTitleFont;
@property (nonatomic) BOOL canShowSpecialistInfo;
@property (nonatomic, strong) UIColor * _Nonnull starRatingColorEnabled;
@property (nonatomic, strong) UIColor * _Nonnull likeRatingColorEnabled;
@property (nonatomic, strong) UIColor * _Nonnull starRatingColorDisabled;
@property (nonatomic, strong) UIColor * _Nonnull likeRatingColorDisabled;
@property (nonatomic, strong) UIColor * _Nonnull starRatingColorCompleted;
@property (nonatomic, strong) UIColor * _Nonnull likeRatingColorCompleted;
@property (nonatomic, strong) UIColor * _Nonnull likeLabelOnStarColor;
@property (nonatomic, strong) UIColor * _Nonnull likeLabelUnderStarColor;
@property (nonatomic, strong) UIColor * _Nonnull surveyTextColor;
@property (nonatomic, strong) UIFont * _Nonnull surveyTextFont;
@property (nonatomic, strong) UIColor * _Nonnull surveyCompletionColor;
@property (nonatomic, strong) UIFont * _Nonnull surveyCompletionFont;
@property (nonatomic) NSInteger surveyCompletionDelay;
@property (nonatomic, strong) UIImage * _Nullable iconStarRatingEmty;
@property (nonatomic, strong) UIImage * _Nullable iconStarRatingFull;
@property (nonatomic, strong) UIImage * _Nullable iconLikeEmpty;
@property (nonatomic, strong) UIImage * _Nullable iconDislikeEmpty;
@property (nonatomic, strong) UIImage * _Nullable iconLikeFull;
@property (nonatomic, strong) UIImage * _Nullable iconDislikeFull;
/// < Режим отображения
@property (nonatomic) enum THRQuickReplyPresentationMode quickReplyPresentationMode;
/// < Выравнивание по горизонтали
@property (nonatomic) enum THRQuickReplyAlignment quickReplyAlignment;
/// < Шрифт для кнопок быстрых ответов
@property (nonatomic, strong) UIFont * _Nonnull quickReplyFont;
/// < Радиус закругления кнопок быстрых ответов
@property (nonatomic, strong) NSNumber * _Nonnull quickReplyBorderCornerRadius;
/// < Цвет границы кнопок быстрых ответов
@property (nonatomic, strong) UIColor * _Nonnull quickReplyBorderColor;
/// < Цвет кнопок быстрых ответов
@property (nonatomic, strong) UIColor * _Nonnull quickReplyBackgroundColor;
/// < Цвет текста на кнопках быстрых ответов
@property (nonatomic, strong) UIColor * _Nonnull quickReplyTextColor;
/// <  Цвет подсветки кнопок быстрых ответов
@property (nonatomic, strong) UIColor * _Nonnull quickReplyBackgroundColorHighlighted;
/// < Цвет подстветки кнопок быстрых ответов
@property (nonatomic, strong) UIColor * _Nonnull quickReplyTextColorHighLighted;
/// < Высота кнопки быстрого ответа (в режиме embed)
@property (nonatomic) CGFloat quickReplyButtonHeight;
/// < Толщина границы кнопки быстрого ответа
@property (nonatomic) CGFloat quickReplyBorderWidth;
@property (nonatomic) BOOL voiceRecordingAllowed;
@property (nonatomic, strong) UIImage * _Nullable voiceMessageRecordButtonImage;
@property (nonatomic, strong) UIImage * _Nullable voiceMessageSendButtonImage;
@property (nonatomic, strong) UIColor * _Nonnull voiceMessageRecordSendButtonColor;
@property (nonatomic, strong) UIImage * _Nullable voiceMessagePlayImage;
@property (nonatomic, strong) UIImage * _Nullable voiceMessagePauseImage;
@property (nonatomic, strong) UIColor * _Nonnull incomingVoiceMessagePlayPauseColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingVoiceMessagePlayPauseColor;
@property (nonatomic, strong) UIColor * _Nonnull previewVoiceMessagePlayPauseColor;
@property (nonatomic, strong) UIColor * _Nonnull previewVoiceMessageBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingVoiceMessageProgressColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingVoiceMessageProgressColor;
@property (nonatomic, strong) UIColor * _Nonnull previewVoiceMessageProgressColor;
@property (nonatomic) BOOL showCloseButton;
@property (nonatomic, strong) UIColor * _Nullable closeButtonColor;
@property (nonatomic, strong) UIImage * _Nullable closeButtonImage;
@property (nonatomic) BOOL newChatCenterApi;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable customHTTPHeadersForDataStore;
@property (nonatomic, strong) NSNumber * _Nonnull historyLoadingCount;
/// pragma mark - Access call didReceiveResponse in delegate
@property (nonatomic) BOOL callReceiveResponseEnabled;
@property (nonatomic) BOOL clearChatHistoryIfSocketReconnect;
@property (nonatomic) BOOL allowUntrustedSSLCertificate;
@property (nonatomic, copy) NSArray<THRCert *> * _Nonnull trustedCertificates;
/// < Включение категорий записи в лог [.off, .info, .network, .networkSock, .userInterface, .error, .all]
/// <ul>
///   <li>
///     Integer as OptionSet (NS_OPTIONS)
///   </li>
/// </ul>
@property (nonatomic, strong) ThreadsLogLevel * _Nonnull logLevels;
/// < Имя файла логгирования, если задать nil, то в файл писать не будет, только в Console через OSLog
@property (nonatomic, copy) NSString * _Nullable logFileName;
/// < Размер лог файлов в Мб
@property (nonatomic) NSInteger logFileSizeMb;
/// < Максимальное количество лог файлов в ротации
@property (nonatomic) NSInteger logFileMaxCount;
@property (nonatomic, copy) NSString * _Nonnull toastViewTextCopy;
@property (nonatomic, strong) UIColor * _Nonnull toastViewTextColor;
@property (nonatomic, strong) UIColor * _Nonnull toastViewBackgroundColor;
@property (nonatomic) CGSize toastViewSize;
@property (nonatomic) NSUInteger photoPickerMaxImagesCount;
@property (nonatomic, readonly, copy) NSString * _Nonnull debugDescription;
+ (THRAttributes * _Nonnull)defaultAttributes SWIFT_WARN_UNUSED_RESULT;
@end

/// Метод аутентификации
typedef SWIFT_ENUM(NSInteger, THRAuthMethod, open) {
/// < Аутентификация передается в headers
  THRAuthMethodHeaders = 0,
/// < Аутентификация передается в cookies
  THRAuthMethodCookies = 1,
};


SWIFT_CLASS_NAMED("THRCert")
@interface THRCert : NSObject
/// Initialization certificate if it is in any place, main bundle or other bundles
/// \param url URL for certificate’s file
///
- (nonnull instancetype)initWithContentsOf:(NSURL * _Nullable)url OBJC_DESIGNATED_INITIALIZER;
/// Initialization certificate if it is in main bundle
/// \param fileName String with name of file
///
- (nonnull instancetype)initWithContentsOfFile:(NSString * _Nonnull)fileName;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7Threads13THRClientInfo")
@interface THRClientInfo : NSObject <NSCopying>
- (nonnull instancetype)initWithClientId:(NSString * _Nonnull)clientId OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nonnull clientId;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable data;
@property (nonatomic, copy) NSString * _Nullable appMarker;
@property (nonatomic, copy) NSString * _Nullable signature;
@property (nonatomic, copy) NSString * _Nullable authToken;
@property (nonatomic, copy) NSString * _Nullable authSchema;
@property (nonatomic) enum THRAuthMethod authMethod;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7Threads11THRControls")
@interface THRControls : NSObject
@property (nonatomic, strong) UIButton * _Nullable sendButton;
@property (nonatomic, strong) UIButton * _Nullable attachButton;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7Threads24THRHistoryLoadingOptions")
@interface THRHistoryLoadingOptions : NSObject
@property (nonatomic) BOOL firstLoading;
@property (nonatomic) BOOL keepContentOffset;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// The <code>JSQMessageAvatarImageDataSource</code> protocol defines the common interface through which
/// a <code>JSQMessagesViewController</code> and <code>JSQMessagesCollectionView</code> interact with avatar image model objects.
/// It declares the required and optional methods that a class must implement so that instances
/// of that class can be display properly within a <code>JSQMessagesCollectionViewCell</code>.
/// A concrete class that conforms to this protocol is provided in the library. See <code>JSQMessagesAvatarImage</code>.
/// seealso:
/// JSQMessagesAvatarImage.
SWIFT_PROTOCOL("_TtP7Threads34THRJSQMessageAvatarImageDataSource_")
@protocol THRJSQMessageAvatarImageDataSource <NSObject>
/// remark:
/// You may return <code>nil</code> from this method while the image is being downloaded.
///
/// returns:
/// The avatar image for a regular display state.
@property (nonatomic, strong) UIImage * _Nullable avatarImage;
/// remark:
/// You may return <code>nil</code> from this method if this does not apply.
///
/// returns:
/// The avatar image for a highlighted display state.
@property (nonatomic, strong) UIImage * _Nullable avatarHighlightedImage;
/// remark:
/// If you do not need support for a placeholder image, that is, your images
/// are stored locally on the device, then you may simply return the same value as avatarImage here.
/// @warning You must not return <code>nil</code> from this method.
///
/// returns:
/// A placeholder avatar image to be displayed if avatarImage is not yet available, or <code>nil</code>.
/// For example, if avatarImage needs to be downloaded, this placeholder image
/// will be used until avatarImage is not <code>nil</code>.
@property (nonatomic, readonly, strong) UIImage * _Nonnull avatarPlaceholderImage;
@end


SWIFT_CLASS("_TtC7Threads14THRMessageInfo")
@interface THRMessageInfo : NSObject
- (nonnull instancetype)initWithText:(NSString * _Nullable)text senderName:(NSString * _Nonnull)senderName hasAttachment:(BOOL)hasAttachment OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// Выравнивание по горизонтали быстрых ответов
typedef SWIFT_ENUM(NSUInteger, THRQuickReplyAlignment, open) {
/// < Выравнивание по центру
  THRQuickReplyAlignmentCenter = 0,
/// < Выравнивание по левому краю
  THRQuickReplyAlignmentLeft = 1,
/// < Выравнивание по правому краю
  THRQuickReplyAlignmentRight = 2,
};

/// Режимы отображения быстрых ответов
typedef SWIFT_ENUM(NSUInteger, THRQuickReplyPresentationMode, open) {
/// < Показ кнопок быстрых ответов в всплывающей панели
  THRQuickReplyPresentationModeToolbar = 0,
/// < Показ кнопок быстрых ответов в потоке сообщений
  THRQuickReplyPresentationModeEmbed = 1,
};


SWIFT_CLASS("_TtC7Threads17THRRequestConfigs")
@interface THRRequestConfigs : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) SocketSettings * _Nonnull socket;
@property (nonatomic, strong) HttpSettings * _Nonnull http;
@property (nonatomic, readonly, copy) NSString * _Nonnull debugDescription;
@end


SWIFT_CLASS("_TtC7Threads16THRRoutingParams")
@interface THRRoutingParams : NSObject
- (nonnull instancetype)initWithPriority:(NSInteger)priority skillId:(NSInteger)skillId expiredAt:(NSString * _Nullable)expiredAt OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary<NSString *, id> * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7Threads17THRSettingsShadow")
@interface THRSettingsShadow : NSObject
/// init Settings for shadow
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     opacity: CGFloat, Shadow opacity (default: 1.0)
///   </li>
///   <li>
///     radius:  CGFloat, Shadow radius (default: 2.0)
///   </li>
///   <li>
///     offset: CGSize, Shadow offset (default: CGSize(width: 2.0, height: 2.0)
///   </li>
///   <li>
///     color: UIColor, Shadow color (default: black)
///   </li>
/// </ul>
- (nonnull instancetype)initWithOpacity:(CGFloat)opacity radius:(CGFloat)radius offset:(CGSize)offset color:(UIColor * _Nonnull)color OBJC_DESIGNATED_INITIALIZER;
/// Shadow opacity
@property (nonatomic, readonly) CGFloat opacity;
/// Shadow radius
@property (nonatomic, readonly) CGFloat radius;
/// Shadow offset
@property (nonatomic, readonly) CGSize offset;
/// Shadow color
@property (nonatomic, readonly, strong) UIColor * _Nonnull color;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol ThreadsDelegate;

SWIFT_CLASS("_TtC7Threads7Threads")
@interface Threads : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@property (nonatomic) enum THRAPIVersion apiVersion;
@property (nonatomic) BOOL isClientIdEncrypted;
@property (nonatomic) BOOL isShowsNetworkActivity;
@property (nonatomic, readonly, copy) NSString * _Nullable clientId;
@property (nonatomic, readonly, copy) NSString * _Nullable clientName;
@property (nonatomic, readonly, copy) NSString * _Nullable appMarker;
@property (nonatomic, readonly, copy) NSString * _Nullable clientSignature;
@property (nonatomic, readonly, copy) NSString * _Nullable clientAuthToken;
@property (nonatomic, readonly, copy) NSString * _Nullable clientAuthSchema;
@property (nonatomic, readonly) BOOL isClientSet;
@property (nonatomic, readonly, copy) NSString * _Nullable data;
@property (nonatomic, readonly, strong) THRAttributes * _Nonnull attributes;
@property (nonatomic, readonly, strong) THRControls * _Nonnull controls;
@property (nonatomic, copy) NSURL * _Nullable restURL;
@property (nonatomic, copy) NSURL * _Nullable dataStoreURL;
@property (nonatomic, readonly) NSTimeInterval lastActivitySeconds;
@property (nonatomic) BOOL keepSocketActive;
@property (nonatomic) BOOL disableUserInput;
+ (Threads * _Nonnull)threads SWIFT_WARN_UNUSED_RESULT;
- (void)configureTransportProtocolWith:(id <ThreadsDelegate> _Nullable)delegate webSocketURL:(NSURL * _Nonnull)webSocketURL providerUid:(NSString * _Nonnull)providerUid restURL:(NSURL * _Nonnull)restURL dataStoreURL:(NSURL * _Nonnull)dataStoreURL;
- (void)registerApplicationForRemoteNotificationsStandartOptionsWithAuthorizationStatusDenied:(void (^ _Nullable)(void))authorizationStatusDenied completionHandler:(void (^ _Nonnull)(NSData * _Nullable))completionHandler;
- (void)applicationDidRegisterForRemoteNotificationsWithDeviceToken:(NSData * _Nonnull)deviceToken;
- (void)updateLocationWithLatitude:(NSNumber * _Nonnull)latitude longitude:(NSNumber * _Nonnull)longitude;
- (void)setClientInfo:(THRClientInfo * _Nonnull)clientInfo;
- (void)updateClientInfo:(THRClientInfo * _Nonnull)clientInfo;
- (void)logout;
- (void)logoutWithClientId:(NSString * _Nonnull)clientId;
- (void)handlePushNotificationUserInfo:(NSDictionary * _Nonnull)userInfo;
- (NSString * _Nonnull)version SWIFT_WARN_UNUSED_RESULT;
- (NSUInteger)unreadMessagesCount SWIFT_WARN_UNUSED_RESULT;
- (void)clearCachedFiles;
- (BOOL)isThreadsOriginPushUserInfo:(NSDictionary * _Nonnull)userInfo SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getAppMarkerFromPushUserInfo:(NSDictionary * _Nonnull)userInfo SWIFT_WARN_UNUSED_RESULT;
- (void)sendMessageWithText:(NSString * _Nonnull)withText completion:(void (^ _Nullable)(NSError * _Nullable))completion;
- (void)registerUserWith:(THRClientInfo * _Nonnull)clientInfo messageWithText:(NSString * _Nullable)text;
- (void)sendMessageWith:(UIImage * _Nonnull)image completion:(void (^ _Nullable)(NSError * _Nullable))completion;
- (UIViewController * _Nonnull)chatViewControllerWith:(THRAttributes * _Nonnull)attributes SWIFT_WARN_UNUSED_RESULT;
- (UIViewController * _Nonnull)chatViewControllerWith:(THRAttributes * _Nonnull)attributes completionHandler:(void (^ _Nullable)(NSError * _Nullable))completionHandler SWIFT_WARN_UNUSED_RESULT;
- (UIViewController * _Nonnull)chatViewControllerWith:(THRAttributes * _Nonnull)attributes pushUserInfo:(NSDictionary * _Nonnull)pushUserInfo completionHandler:(void (^ _Nullable)(NSError * _Nullable))completionHandler SWIFT_WARN_UNUSED_RESULT;
@end

@protocol ThreadsPreloadView;

SWIFT_PROTOCOL("_TtP7Threads15ThreadsDelegate_")
@protocol ThreadsDelegate
- (void)threads:(Threads * _Nonnull)threads didReceiveError:(NSError * _Nonnull)error;
- (void)threads:(Threads * _Nonnull)threads unreadMessagesCount:(NSUInteger)unreadMessagesCount;
- (void)threads:(Threads * _Nonnull)threads didChangeDeviceAddress:(NSString * _Nonnull)deviceAddress;
@optional
- (BOOL)threads:(Threads * _Nonnull)threads allowOpenUrl:(NSURL * _Nonnull)allowOpenUrl SWIFT_WARN_UNUSED_RESULT;
- (id <ThreadsPreloadView> _Null_unspecified)customPreloadView SWIFT_WARN_UNUSED_RESULT;
- (void)threads:(Threads * _Nonnull)threads didReceiveMessage:(THRMessageInfo * _Nonnull)message;
@end


SWIFT_CLASS_NAMED("ThreadsLogLevel")
@interface ThreadsLogLevel : NSObject
/// LogValue main init
/// \param rawValue Integer as OptionSet (NS_OPTIONS)
///
- (nonnull instancetype)initWithRawValue:(NSInteger)rawValue OBJC_DESIGNATED_INITIALIZER;
/// Off all logging
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ThreadsLogLevel * _Nonnull off;)
+ (ThreadsLogLevel * _Nonnull)off SWIFT_WARN_UNUSED_RESULT;
/// INFO level logging
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ThreadsLogLevel * _Nonnull info;)
+ (ThreadsLogLevel * _Nonnull)info SWIFT_WARN_UNUSED_RESULT;
/// NETWORK level logging
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ThreadsLogLevel * _Nonnull network;)
+ (ThreadsLogLevel * _Nonnull)network SWIFT_WARN_UNUSED_RESULT;
/// NETWORK-SOCK level logging
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ThreadsLogLevel * _Nonnull networkSock;)
+ (ThreadsLogLevel * _Nonnull)networkSock SWIFT_WARN_UNUSED_RESULT;
/// USER-INTERFACE level logging
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ThreadsLogLevel * _Nonnull userInterface;)
+ (ThreadsLogLevel * _Nonnull)userInterface SWIFT_WARN_UNUSED_RESULT;
/// ERROR level logging
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ThreadsLogLevel * _Nonnull error;)
+ (ThreadsLogLevel * _Nonnull)error SWIFT_WARN_UNUSED_RESULT;
/// All levels of logging are On
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ThreadsLogLevel * _Nonnull all;)
+ (ThreadsLogLevel * _Nonnull)all SWIFT_WARN_UNUSED_RESULT;
/// LogLevel primitive value
@property (nonatomic, readonly) NSInteger rawValue;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP7Threads18ThreadsPreloadView_")
@protocol ThreadsPreloadView
- (void)startAnimation;
- (void)stopAnimation;
- (UIView * _Null_unspecified)getView SWIFT_WARN_UNUSED_RESULT;
@end








@interface UIView (SWIFT_EXTENSION(Threads))
- (void)addContainedView:(UIView * _Nonnull)inSubView;
@end

@class UITextRange;
@class UIGestureRecognizer;
@class NSTextContainer;

/// UITextView без возможности выделять текст, но с открытием ссылок
/// Basically, it disables unwanted UIGestureRecognizer from UITextView.
/// https://stackoverflow.com/a/49428307/1033581
SWIFT_CLASS("_TtC7Threads20UnselectableTextView")
@interface UnselectableTextView : UITextView
@property (nonatomic, strong) UITextRange * _Nullable selectedTextRange;
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)gestureRecognizer SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame textContainer:(NSTextContainer * _Nullable)textContainer OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=7.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("UploadDataRequest")
@interface THRUploadDataRequest : NSObject
- (void)uploadWithFile:(NSString * _Nonnull)name with:(NSData * _Nonnull)data completionHandler:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
#ifndef THREADS_SWIFT_H
#define THREADS_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Threads",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


@class UIColor;

SWIFT_CLASS("_TtC7Threads10ColorAsset")
@interface ColorAsset : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull accent;)
+ (UIColor * _Nonnull)accent SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull darkTextColor;)
+ (UIColor * _Nonnull)darkTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull labelColor;)
+ (UIColor * _Nonnull)labelColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull lightTextColor;)
+ (UIColor * _Nonnull)lightTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull linkColor;)
+ (UIColor * _Nonnull)linkColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull opaqueSeparatorColor;)
+ (UIColor * _Nonnull)opaqueSeparatorColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull placeholderTextColor;)
+ (UIColor * _Nonnull)placeholderTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull quaternaryLabelColor;)
+ (UIColor * _Nonnull)quaternaryLabelColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull quaternarySystemFillColor;)
+ (UIColor * _Nonnull)quaternarySystemFillColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull secondaryLabelColor;)
+ (UIColor * _Nonnull)secondaryLabelColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull secondarySystemBackgroundColor;)
+ (UIColor * _Nonnull)secondarySystemBackgroundColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull secondarySystemFillColor;)
+ (UIColor * _Nonnull)secondarySystemFillColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull secondarySystemGroupedBackgroundColor;)
+ (UIColor * _Nonnull)secondarySystemGroupedBackgroundColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull separatorColor;)
+ (UIColor * _Nonnull)separatorColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemBackgroundColor;)
+ (UIColor * _Nonnull)systemBackgroundColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemBlueColor;)
+ (UIColor * _Nonnull)systemBlueColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemFillColor;)
+ (UIColor * _Nonnull)systemFillColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemGray2Color;)
+ (UIColor * _Nonnull)systemGray2Color SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemGray3Color;)
+ (UIColor * _Nonnull)systemGray3Color SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemGray4Color;)
+ (UIColor * _Nonnull)systemGray4Color SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemGray5Color;)
+ (UIColor * _Nonnull)systemGray5Color SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemGray6Color;)
+ (UIColor * _Nonnull)systemGray6Color SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemGrayColor;)
+ (UIColor * _Nonnull)systemGrayColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemGreenColor;)
+ (UIColor * _Nonnull)systemGreenColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemGroupedBackgroundColor;)
+ (UIColor * _Nonnull)systemGroupedBackgroundColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemIndigoColor;)
+ (UIColor * _Nonnull)systemIndigoColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemOrangeColor;)
+ (UIColor * _Nonnull)systemOrangeColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemPinkColor;)
+ (UIColor * _Nonnull)systemPinkColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemPurpleColor;)
+ (UIColor * _Nonnull)systemPurpleColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemRedColor;)
+ (UIColor * _Nonnull)systemRedColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemTealColor;)
+ (UIColor * _Nonnull)systemTealColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull systemYellowColor;)
+ (UIColor * _Nonnull)systemYellowColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull tertiaryLabelColor;)
+ (UIColor * _Nonnull)tertiaryLabelColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull tertiarySystemBackgroundColor;)
+ (UIColor * _Nonnull)tertiarySystemBackgroundColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull tertiarySystemFillColor;)
+ (UIColor * _Nonnull)tertiarySystemFillColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull tertiarySystemGroupedBackgroundColor;)
+ (UIColor * _Nonnull)tertiarySystemGroupedBackgroundColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrAttachButtonColor;)
+ (UIColor * _Nonnull)thrAttachButtonColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrAttachButtonHighlightColor;)
+ (UIColor * _Nonnull)thrAttachButtonHighlightColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrDeletedMessageTextColor;)
+ (UIColor * _Nonnull)thrDeletedMessageTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrEmptyImageColor;)
+ (UIColor * _Nonnull)thrEmptyImageColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrFailedBubbleColor;)
+ (UIColor * _Nonnull)thrFailedBubbleColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrFindMoreMessageTextColor;)
+ (UIColor * _Nonnull)thrFindMoreMessageTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrFindedMessageHeaderBackgroundColor;)
+ (UIColor * _Nonnull)thrFindedMessageHeaderBackgroundColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrFindedMessageHeaderTextColor;)
+ (UIColor * _Nonnull)thrFindedMessageHeaderTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrIncomingBubbleColor;)
+ (UIColor * _Nonnull)thrIncomingBubbleColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrIncomingBubbleLinkColor;)
+ (UIColor * _Nonnull)thrIncomingBubbleLinkColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrIncomingBubbleTextColor;)
+ (UIColor * _Nonnull)thrIncomingBubbleTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrIncomingFileIconTintColor;)
+ (UIColor * _Nonnull)thrIncomingFileIconTintColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrIncomingMediaTimeColor;)
+ (UIColor * _Nonnull)thrIncomingMediaTimeColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrIncomingQuoteAuthorColor;)
+ (UIColor * _Nonnull)thrIncomingQuoteAuthorColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrIncomingQuoteFilesizeColor;)
+ (UIColor * _Nonnull)thrIncomingQuoteFilesizeColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrIncomingQuoteMessageColor;)
+ (UIColor * _Nonnull)thrIncomingQuoteMessageColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrIncomingQuoteSeparatorColor;)
+ (UIColor * _Nonnull)thrIncomingQuoteSeparatorColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrIncomingQuoteTimeColor;)
+ (UIColor * _Nonnull)thrIncomingQuoteTimeColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrIncomingTimeColor;)
+ (UIColor * _Nonnull)thrIncomingTimeColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrLikeLabelOnStarColor;)
+ (UIColor * _Nonnull)thrLikeLabelOnStarColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrLikeLabelUnderStarColor;)
+ (UIColor * _Nonnull)thrLikeLabelUnderStarColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrLikeRatingColorCompleted;)
+ (UIColor * _Nonnull)thrLikeRatingColorCompleted SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrLikeRatingColorDisabled;)
+ (UIColor * _Nonnull)thrLikeRatingColorDisabled SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrLikeRatingColorEnabled;)
+ (UIColor * _Nonnull)thrLikeRatingColorEnabled SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingBubbleColor;)
+ (UIColor * _Nonnull)thrOutgoingBubbleColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingBubbleLinkColor;)
+ (UIColor * _Nonnull)thrOutgoingBubbleLinkColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingBubbleTextColor;)
+ (UIColor * _Nonnull)thrOutgoingBubbleTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingDeliveredStatusColor;)
+ (UIColor * _Nonnull)thrOutgoingDeliveredStatusColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingFileIconTintColor;)
+ (UIColor * _Nonnull)thrOutgoingFileIconTintColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingMediaDeliveredStatusColor;)
+ (UIColor * _Nonnull)thrOutgoingMediaDeliveredStatusColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingMediaPendingStatusColor;)
+ (UIColor * _Nonnull)thrOutgoingMediaPendingStatusColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingMediaReadStatusColor;)
+ (UIColor * _Nonnull)thrOutgoingMediaReadStatusColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingMediaTimeColor;)
+ (UIColor * _Nonnull)thrOutgoingMediaTimeColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingPendingStatusColor;)
+ (UIColor * _Nonnull)thrOutgoingPendingStatusColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingQuoteAuthorColor;)
+ (UIColor * _Nonnull)thrOutgoingQuoteAuthorColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingQuoteFilesizeColor;)
+ (UIColor * _Nonnull)thrOutgoingQuoteFilesizeColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingQuoteMessageColor;)
+ (UIColor * _Nonnull)thrOutgoingQuoteMessageColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingQuoteSeparatorColor;)
+ (UIColor * _Nonnull)thrOutgoingQuoteSeparatorColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingQuoteTimeColor;)
+ (UIColor * _Nonnull)thrOutgoingQuoteTimeColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingReadStatusColor;)
+ (UIColor * _Nonnull)thrOutgoingReadStatusColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrOutgoingTimeColor;)
+ (UIColor * _Nonnull)thrOutgoingTimeColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrPhotoPickerSheetTextColor;)
+ (UIColor * _Nonnull)thrPhotoPickerSheetTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrPhotoPickerToolbarTintColor;)
+ (UIColor * _Nonnull)thrPhotoPickerToolbarTintColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrPlaceholderSubtitleColor;)
+ (UIColor * _Nonnull)thrPlaceholderSubtitleColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrPlaceholderTitleColor;)
+ (UIColor * _Nonnull)thrPlaceholderTitleColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrQuickReplyBackgroundColor;)
+ (UIColor * _Nonnull)thrQuickReplyBackgroundColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrQuickReplyBackgroundColorHighlighted;)
+ (UIColor * _Nonnull)thrQuickReplyBackgroundColorHighlighted SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrQuickReplyBorder;)
+ (UIColor * _Nonnull)thrQuickReplyBorder SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrQuickReplyTextColor;)
+ (UIColor * _Nonnull)thrQuickReplyTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrQuickReplyTextColorHighLighted;)
+ (UIColor * _Nonnull)thrQuickReplyTextColorHighLighted SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrQuoteAccentColor;)
+ (UIColor * _Nonnull)thrQuoteAccentColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrQuoteAuthorColor;)
+ (UIColor * _Nonnull)thrQuoteAuthorColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrQuoteBackgroundColor;)
+ (UIColor * _Nonnull)thrQuoteBackgroundColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrQuoteMessageColor;)
+ (UIColor * _Nonnull)thrQuoteMessageColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrRefreshColor;)
+ (UIColor * _Nonnull)thrRefreshColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrScheduleAlertColor;)
+ (UIColor * _Nonnull)thrScheduleAlertColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrScheduleIconBackgroundColor;)
+ (UIColor * _Nonnull)thrScheduleIconBackgroundColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrScrollToBottomBadgeColor;)
+ (UIColor * _Nonnull)thrScrollToBottomBadgeColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrScrollToBottomBadgeTextColor;)
+ (UIColor * _Nonnull)thrScrollToBottomBadgeTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrSearchBarTextColor;)
+ (UIColor * _Nonnull)thrSearchBarTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrSearchBarTintColor;)
+ (UIColor * _Nonnull)thrSearchBarTintColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrSearchMessageAuthorTextColor;)
+ (UIColor * _Nonnull)thrSearchMessageAuthorTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrSearchMessageDateTextColor;)
+ (UIColor * _Nonnull)thrSearchMessageDateTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrSearchMessageFileTextColor;)
+ (UIColor * _Nonnull)thrSearchMessageFileTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrSearchMessageMatchTextColor;)
+ (UIColor * _Nonnull)thrSearchMessageMatchTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrSearchMessageTextColor;)
+ (UIColor * _Nonnull)thrSearchMessageTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrSearchScopeBarTintColor;)
+ (UIColor * _Nonnull)thrSearchScopeBarTintColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrSendButtonColor;)
+ (UIColor * _Nonnull)thrSendButtonColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrSendButtonDisabledColor;)
+ (UIColor * _Nonnull)thrSendButtonDisabledColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrSendButtonHighlightColor;)
+ (UIColor * _Nonnull)thrSendButtonHighlightColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrSpecialisConnectSubtitleColor;)
+ (UIColor * _Nonnull)thrSpecialisConnectSubtitleColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrSpecialisConnectTitleColor;)
+ (UIColor * _Nonnull)thrSpecialisConnectTitleColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrStarRatingColorCompleted;)
+ (UIColor * _Nonnull)thrStarRatingColorCompleted SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrStarRatingColorDisabled;)
+ (UIColor * _Nonnull)thrStarRatingColorDisabled SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrStarRatingColorEnabled;)
+ (UIColor * _Nonnull)thrStarRatingColorEnabled SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrSurveyCompletionColor;)
+ (UIColor * _Nonnull)thrSurveyCompletionColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrSurveyTextColor;)
+ (UIColor * _Nonnull)thrSurveyTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrTimeAndStatusBackgroundColor;)
+ (UIColor * _Nonnull)thrTimeAndStatusBackgroundColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrToolbarQuotedMessageAuthorColor;)
+ (UIColor * _Nonnull)thrToolbarQuotedMessageAuthorColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrToolbarQuotedMessageColor;)
+ (UIColor * _Nonnull)thrToolbarQuotedMessageColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrToolbarTintColor;)
+ (UIColor * _Nonnull)thrToolbarTintColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrTypingTextColor;)
+ (UIColor * _Nonnull)thrTypingTextColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrWaitingSpecialistBgColor;)
+ (UIColor * _Nonnull)thrWaitingSpecialistBgColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrWaitingSpecialistBorderColor;)
+ (UIColor * _Nonnull)thrWaitingSpecialistBorderColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrWaitingSpecialistSpinnerColor;)
+ (UIColor * _Nonnull)thrWaitingSpecialistSpinnerColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrjsqFileViewerColor;)
+ (UIColor * _Nonnull)thrjsqFileViewerColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrjsqMessageBubbleBlueColor;)
+ (UIColor * _Nonnull)thrjsqMessageBubbleBlueColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrjsqMessageBubbleGreenColor;)
+ (UIColor * _Nonnull)thrjsqMessageBubbleGreenColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrjsqMessageBubbleLightGrayColor;)
+ (UIColor * _Nonnull)thrjsqMessageBubbleLightGrayColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrjsqMessageBubbleRedColor;)
+ (UIColor * _Nonnull)thrjsqMessageBubbleRedColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrjsqNavigationBarColor;)
+ (UIColor * _Nonnull)thrjsqNavigationBarColor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull thrjsqTypingIndicatorBubbleColor;)
+ (UIColor * _Nonnull)thrjsqTypingIndicatorBubbleColor SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSURL;
@class UIImage;
@class NSData;
@class NSError;

SWIFT_CLASS_NAMED("DownloadDataRequest")
@interface THRDownloadDataRequest : NSObject
- (void)downloadAndSaveFileFromURL:(NSURL * _Nonnull)url completionHandler:(void (^ _Nonnull)(NSURL * _Nullable, NSError * _Nullable))completionHandler progressHandler:(void (^ _Nullable)(CGFloat))progressHandler;
- (void)downloadImageFromURL:(NSURL * _Nonnull)url completionHandler:(void (^ _Nonnull)(UIImage * _Nullable, NSError * _Nullable))completionHandler;
- (void)downloadDataFromURL:(NSURL * _Nonnull)url completionHandler:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completionHandler progressHandler:(void (^ _Nullable)(CGFloat))progressHandler;
- (void)cancelDownload;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSCoder;

SWIFT_CLASS("_TtC7Threads15EDNAPreloadView")
@interface EDNAPreloadView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)_ OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
- (void)startAnimating;
- (void)stopAnimating;
@end


@class NSString;

@interface NSFileManager (SWIFT_EXTENSION(Threads))
/// Метод для сохранения данных в локальный кеш
/// \param data Данные для сохранения
///
/// \param name Имя файла <em>Название файла и ресурса в ДС могут отличаться!!!!</em>
///
///
/// returns:
/// Путь до сохраненного файла или nil при ошибке
- (NSURL * _Nullable)saveDataWithData:(NSData * _Nonnull)data toCacheFile:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
/// Метод для получения ссылкииз кеша  до указанного файла
/// \param name Имя файла для поиска
///
///
/// returns:
/// Ссылка или nil если такого файла нет
- (NSURL * _Nullable)getURLForCachedFile:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
/// Метод для получения данных из кеша по имени файла
/// \param name Имя файла для поиска в кеше
///
///
/// returns:
/// Данные файла или nil
- (NSData * _Nullable)getDataForCachedFile:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
/// Метод для удаления временных папок
- (void)deleteCache;
@end


SWIFT_CLASS("_TtC7Threads12HttpSettings")
@interface HttpSettings : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// таймаут установления нового соединения
@property (nonatomic) NSTimeInterval connectTimeoutSec;
/// таймаут операций загрузки
@property (nonatomic) NSTimeInterval downloadTimeoutSec;
/// таймаут операций выгрузки
@property (nonatomic) NSTimeInterval uploadTimeoutSec;
@property (nonatomic, readonly, copy) NSString * _Nonnull debugDescription;
@end


SWIFT_CLASS("_TtC7Threads10ImageAsset")
@interface ImageAsset : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull searchButton;)
+ (UIImage * _Nonnull)searchButton SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull backButton;)
+ (UIImage * _Nonnull)backButton SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull bubbleMin;)
+ (UIImage * _Nonnull)bubbleMin SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull bubbleStroked;)
+ (UIImage * _Nonnull)bubbleStroked SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull chatPlaceholder;)
+ (UIImage * _Nonnull)chatPlaceholder SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull checkmark;)
+ (UIImage * _Nonnull)checkmark SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull closeButton;)
+ (UIImage * _Nonnull)closeButton SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull defaultProfile;)
+ (UIImage * _Nonnull)defaultProfile SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull doubleCheckmark;)
+ (UIImage * _Nonnull)doubleCheckmark SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull emptyCheckmark;)
+ (UIImage * _Nonnull)emptyCheckmark SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull forward;)
+ (UIImage * _Nonnull)forward SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull icClip;)
+ (UIImage * _Nonnull)icClip SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull icDislikeEmpty;)
+ (UIImage * _Nonnull)icDislikeEmpty SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull icDislikeFull;)
+ (UIImage * _Nonnull)icDislikeFull SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull icEditied;)
+ (UIImage * _Nonnull)icEditied SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull icFile;)
+ (UIImage * _Nonnull)icFile SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull icKeyboardHide;)
+ (UIImage * _Nonnull)icKeyboardHide SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull icKeyboardShow;)
+ (UIImage * _Nonnull)icKeyboardShow SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull icLikeEmpty;)
+ (UIImage * _Nonnull)icLikeEmpty SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull icLikeFull;)
+ (UIImage * _Nonnull)icLikeFull SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull icStarRatingEmpty;)
+ (UIImage * _Nonnull)icStarRatingEmpty SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull icStarRatingFull;)
+ (UIImage * _Nonnull)icStarRatingFull SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull notFound;)
+ (UIImage * _Nonnull)notFound SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull pendingMark;)
+ (UIImage * _Nonnull)pendingMark SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull prechatError;)
+ (UIImage * _Nonnull)prechatError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull scheduleAlert;)
+ (UIImage * _Nonnull)scheduleAlert SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull scrollDownButton;)
+ (UIImage * _Nonnull)scrollDownButton SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull sentCheckmark;)
+ (UIImage * _Nonnull)sentCheckmark SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull thrjsqAlert;)
+ (UIImage * _Nonnull)thrjsqAlert SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull thrjsqArrowDown;)
+ (UIImage * _Nonnull)thrjsqArrowDown SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull thrjsqArrowUp;)
+ (UIImage * _Nonnull)thrjsqArrowUp SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull thrjsqBubbleMin;)
+ (UIImage * _Nonnull)thrjsqBubbleMin SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull thrjsqBubbleStroked;)
+ (UIImage * _Nonnull)thrjsqBubbleStroked SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull thrjsqClip;)
+ (UIImage * _Nonnull)thrjsqClip SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull thrjsqFile;)
+ (UIImage * _Nonnull)thrjsqFile SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull thrjsqGroup2;)
+ (UIImage * _Nonnull)thrjsqGroup2 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull thrjsqGroup4;)
+ (UIImage * _Nonnull)thrjsqGroup4 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull thrjsqLoading;)
+ (UIImage * _Nonnull)thrjsqLoading SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull thrjsqMicrophone;)
+ (UIImage * _Nonnull)thrjsqMicrophone SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull thrjsqPause;)
+ (UIImage * _Nonnull)thrjsqPause SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull thrjsqPlay;)
+ (UIImage * _Nonnull)thrjsqPlay SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull thrjsqPlay1;)
+ (UIImage * _Nonnull)thrjsqPlay1 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull thrjsqShield;)
+ (UIImage * _Nonnull)thrjsqShield SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull thrjsqTyping;)
+ (UIImage * _Nonnull)thrjsqTyping SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol LoadingChatViewControllerDelegate;
@class NSBundle;

SWIFT_CLASS("_TtC7Threads25LoadingChatViewController")
@interface LoadingChatViewController : UIViewController
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
@property (nonatomic, weak) id <LoadingChatViewControllerDelegate> _Nullable delegate;
@property (nonatomic) NSError * _Nullable error;
- (void)loadView;
- (void)startTimer;
- (void)stopTimer;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_PROTOCOL("_TtP7Threads33LoadingChatViewControllerDelegate_")
@protocol LoadingChatViewControllerDelegate <NSObject>
/// Метод для проверки наличия ошибки при загрузке и ее отображения
- (void)checkLoadingError;
- (void)repeatInitChat;
@end


SWIFT_CLASS("_TtC7Threads12Localization")
@interface Localization : NSObject
+ (NSString * _Nonnull)localizeWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)localizeWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7Threads18LocalizationConfig")
@interface LocalizationConfig : NSObject
- (nonnull instancetype)initWithBundle:(NSBundle * _Nonnull)bundle tableName:(NSString * _Nonnull)tableName OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, strong) NSBundle * _Nonnull bundle;
@property (nonatomic, readonly, copy) NSString * _Nonnull tableName;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol MessagesLoadEarlierHeaderViewDelegate;
@class UIButton;

SWIFT_CLASS("_TtC7Threads29MessagesLoadEarlierHeaderView")
@interface MessagesLoadEarlierHeaderView : UICollectionReusableView
- (nonnull instancetype)initWithFrame:(CGRect)_ SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat kTHRJSQMessagesLoadEarlierHeaderViewHeight;)
+ (CGFloat)kTHRJSQMessagesLoadEarlierHeaderViewHeight SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull headerReuseIdentifier;)
+ (NSString * _Nonnull)headerReuseIdentifier SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, weak) id <MessagesLoadEarlierHeaderViewDelegate> _Nullable delegate;
@property (nonatomic, readonly, strong) UIButton * _Nonnull loadButton;
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
@end


SWIFT_PROTOCOL("_TtP7Threads37MessagesLoadEarlierHeaderViewDelegate_")
@protocol MessagesLoadEarlierHeaderViewDelegate <NSObject>
- (void)headerView:(MessagesLoadEarlierHeaderView * _Nonnull)headerView didPressLoadButton:(UIButton * _Nonnull)sender;
@end






@interface NSError (SWIFT_EXTENSION(Threads))
/// Метод для создания ошибки СДК с описанием (с дефолтным кодом -1000)
/// \param description Описание ошибки
///
///
/// returns:
/// Ошибка
+ (NSError * _Nonnull)applicationErrorWith:(NSString * _Nonnull)description SWIFT_WARN_UNUSED_RESULT;
/// Метод для создания ошибки СДК с ее кодом описанием
/// \param code Код ошибки
///
/// \param description Описание ошибки
///
///
/// returns:
/// Ошибка
+ (NSError * _Nonnull)applicationErrorWith:(NSInteger)code and:(NSString * _Nonnull)description SWIFT_WARN_UNUSED_RESULT;
@end





SWIFT_CLASS("_TtC7Threads12PushUserInfo")
@interface PushUserInfo : NSObject
- (nullable instancetype)initFrom:(NSDictionary<NSString *, id> * _Nonnull)pushUserInfo OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nonnull alert;
@property (nonatomic, readonly) NSInteger skillId;
@property (nonatomic, readonly, copy) NSString * _Nonnull expiredAt;
@property (nonatomic, readonly, copy) NSString * _Nonnull chlSentAt;
@property (nonatomic, readonly, copy) NSString * _Nonnull campaign;
@property (nonatomic, readonly) NSInteger priority;
@property (nonatomic, readonly, copy) NSString * _Nonnull senderName;
@property (nonatomic, readonly, copy) NSString * _Nullable chatMessageId;
+ (BOOL)checkMinimumPushFrom:(NSDictionary<NSString *, id> * _Nonnull)pushUserInfo SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7Threads10QuickReply")
@interface QuickReply : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UICollectionView;
@protocol QuickReplyCellDelegate;
@class UITraitCollection;

SWIFT_CLASS("_TtC7Threads14QuickReplyCell")
@interface QuickReplyCell : UICollectionViewCell
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) QuickReplyCell * _Nonnull sizingCell;)
+ (QuickReplyCell * _Nonnull)sizingCell SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) UICollectionView * _Nullable colView;
+ (NSString * _Nonnull)cellIdentifier SWIFT_WARN_UNUSED_RESULT;
- (void)configureWithQuickReply:(QuickReply * _Nonnull)quickReply delegate:(id <QuickReplyCellDelegate> _Nonnull)delegate;
- (void)setWidth:(CGFloat)_;
- (void)prepareForReuse;
- (void)layoutSubviews;
- (CGSize)getSizeWithWidth:(CGFloat)width SWIFT_WARN_UNUSED_RESULT;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
@end


///
SWIFT_PROTOCOL("_TtP7Threads22QuickReplyCellDelegate_")
@protocol QuickReplyCellDelegate
/// \param quickReply 
///
- (void)didSelectQuickReply:(QuickReply * _Nonnull)quickReply;
@end


SWIFT_CLASS("_TtC7Threads12SQActionCell")
@interface SQActionCell : UICollectionViewCell
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
- (void)configureWithActionString:(NSString * _Nonnull)actionString;
@end


SWIFT_CLASS("_TtC7Threads11SQAlbumCell")
@interface SQAlbumCell : UITableViewCell
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
- (void)startLoading;
- (void)stopLoading;
- (void)updateImage:(UIImage * _Nullable)image;
- (void)configureWithAlbumName:(NSString * _Nonnull)albumName photosCount:(NSInteger)photosCount;
@end


SWIFT_CLASS("_TtC7Threads18SQPhotoPreviewCell")
@interface SQPhotoPreviewCell : UICollectionViewCell
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC7Threads13SQPreviewCell")
@interface SQPreviewCell : UICollectionViewCell
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
@end

/// Настройка поиска
typedef SWIFT_ENUM(NSUInteger, SearchScope, open) {
  SearchScopeAll = 0,
  SearchScopeImages = 1,
  SearchScopeFiles = 2,
  SearchScopeCount = 3,
};

/// Состояние для кнопки
typedef SWIFT_ENUM(NSUInteger, SearchState, open) {
  SearchStateIdle = 0,
  SearchStateLoading = 1,
};


SWIFT_CLASS("_TtC7Threads32SearchingForSpecialistFooterView")
@interface SearchingForSpecialistFooterView : UICollectionReusableView
- (nonnull instancetype)initWithFrame:(CGRect)_ SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat footerViewHeight;)
+ (CGFloat)footerViewHeight SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull footerReuseIdentifier;)
+ (NSString * _Nonnull)footerReuseIdentifier SWIFT_WARN_UNUSED_RESULT;
+ (void)setFooterReuseIdentifier:(NSString * _Nonnull)value;
- (void)configureWithDefaultSettingsforCollectionView:(UICollectionView * _Nonnull)collectionView;
@end


SWIFT_CLASS("_TtC7Threads14SocketSettings")
@interface SocketSettings : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// интервал ожидания отправки сообщения
@property (nonatomic) NSInteger sendIntervalSec;
/// интервал повторной попытки отправки сообщения
@property (nonatomic) NSTimeInterval resendIntervalSec;
/// интервал запросов поддержания активной соединения
@property (nonatomic) NSTimeInterval resendPingIntervalSec;
/// таймаут установления нового соединения
@property (nonatomic) NSTimeInterval connectTimeoutSec;
/// таймаут операций чтения для нового соединения
@property (nonatomic) NSTimeInterval readTimeoutSec;
/// таймаут операций записи для нового соединения
@property (nonatomic) NSTimeInterval writeTimeoutSec;
@property (nonatomic, readonly, copy) NSString * _Nonnull debugDescription;
@end

@protocol StarRateViewDelegate;

SWIFT_CLASS("_TtC7Threads12StarRateView")
@interface StarRateView : UIView
- (nonnull instancetype)init;
- (nonnull instancetype)initWithMinimumValue:(NSUInteger)minimumValue maximumValue:(NSUInteger)maximumValue;
- (nonnull instancetype)initWithMinimumValue:(NSUInteger)minimumValue maximumValue:(NSUInteger)maximumValue value:(NSUInteger)value spacing:(CGFloat)spacing emptyStarImage:(UIImage * _Nullable)emptyStarImage emptyStarColor:(UIColor * _Nonnull)emptyStarColor filledStarImage:(UIImage * _Nullable)filledStarImage fullStarColor:(UIColor * _Nonnull)fullStarColor OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
@property (nonatomic, weak) id <StarRateViewDelegate> _Nullable delegate;
@property (nonatomic) NSUInteger maximumValue;
@property (nonatomic) NSUInteger minimumValue;
@property (nonatomic) CGFloat spacing;
@property (nonatomic, strong) UIImage * _Nullable emptyStarImage;
@property (nonatomic, strong) UIColor * _Nonnull emptyStarColor;
@property (nonatomic, strong) UIImage * _Nullable filledStarImage;
@property (nonatomic, strong) UIColor * _Nonnull fullStarColor;
@property (nonatomic) NSUInteger value;
@property (nonatomic, strong) UIColor * _Null_unspecified backgroundColor;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (void)drawRect:(CGRect)rect;
- (void)setNeedsLayout;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_PROTOCOL("_TtP7Threads20StarRateViewDelegate_")
@protocol StarRateViewDelegate <NSObject>
- (void)valueDidChangeWithSender:(StarRateView * _Nonnull)sender;
@end

typedef SWIFT_ENUM(NSUInteger, THRAPIVersion, open) {
  THRAPIVersionApi15 = 16,
  THRAPIVersionApi17 = 17,
  THRAPIVersionApi18 = 18,
};

@class UIFont;
@class THRSettingsShadow;
enum THRQuickReplyPresentationMode : NSUInteger;
enum THRQuickReplyAlignment : NSUInteger;
@class NSNumber;
@class THRCert;
@class ThreadsLogLevel;

SWIFT_CLASS("_TtC7Threads13THRAttributes")
@interface THRAttributes : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) LocalizationConfig * _Nullable localizationConfig;
/// Works properly for non view controller based status bar appearance
@property (nonatomic) UIStatusBarStyle statusBarStyle;
@property (nonatomic, strong) UIColor * _Nonnull refreshColor;
@property (nonatomic) BOOL navigationBarVisible;
@property (nonatomic) BOOL navigationBarCustomizeTitle;
@property (nonatomic, copy) NSString * _Nullable navigationBarTitle;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarTitleColor;
@property (nonatomic, strong) UIFont * _Nonnull navigationBarTitleFont;
@property (nonatomic, strong) UIFont * _Nonnull navigationBarSubtitleFont;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarSubtitleColor;
@property (nonatomic) BOOL navigationBarSubtitleShowOrgUnit;
@property (nonatomic) BOOL navigationBarSubtitleVisible;
@property (nonatomic) BOOL navigationBarLarge;
@property (nonatomic) BOOL navigationBarKeyboardControlVisible;
@property (nonatomic, strong) UIImage * _Nullable navigationBarKeyboardShowImage;
@property (nonatomic, strong) UIImage * _Nullable navigationBarKeyboardHideImage;
@property (nonatomic) BOOL navigationBarShadow;
@property (nonatomic, strong) THRSettingsShadow * _Nonnull navigationBarShadowSettings;
@property (nonatomic, strong) UIColor * _Nonnull navigationBarBackButtonColor;
@property (nonatomic) BOOL launchViewEnable;
@property (nonatomic, strong) UIColor * _Nonnull launchActivityViewColor;
@property (nonatomic, strong) UIColor * _Nonnull launchViewBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull launchViewInnerBoxBackgroundColor;
@property (nonatomic) CGFloat launchViewInnerBoxCornerRadius;
@property (nonatomic) CGSize launchViewInnerBoxSize SWIFT_DEPRECATED_MSG("Используйте для задания минимального размера launchViewMinSize");
@property (nonatomic) CGSize launchViewMinSize;
@property (nonatomic, strong) UIColor * _Nonnull launchViewTextColor;
@property (nonatomic, strong) UIFont * _Nonnull launchViewTextFont;
@property (nonatomic, strong) UIImage * _Nullable loadingChatErrorImageWithCodeFrom400to599;
@property (nonatomic, strong) UIImage * _Nullable loadingChatErrorImage;
@property (nonatomic, strong) UIFont * _Nonnull loadingChatTitleFont;
@property (nonatomic, strong) UIColor * _Nonnull loadingChatTitleColor;
@property (nonatomic, strong) UIFont * _Nonnull loadingChatSubtitleFont;
@property (nonatomic, strong) UIColor * _Nonnull loadingChatSubtitleColor;
@property (nonatomic, strong) UIFont * _Nonnull loadingChatRepeatButtonTitleFont;
@property (nonatomic, strong) UIColor * _Nonnull loadingChatRepeatButtonTitleColor;
@property (nonatomic, strong) UIColor * _Nonnull loadingChatRepeatButtonBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
@property (nonatomic, strong) UIImage * _Nullable placeholderImage;
@property (nonatomic, strong) UIColor * _Nonnull placeholderTitleColor;
@property (nonatomic, strong) UIColor * _Nonnull placeholderSubtitleColor;
@property (nonatomic, strong) UIFont * _Nonnull placeholderTitleFont;
@property (nonatomic, strong) UIFont * _Nonnull placeholderSubtitleFont;
@property (nonatomic) BOOL imageEdgesActived;
@property (nonatomic) UIEdgeInsets imageEdges;
@property (nonatomic) CGFloat imageCornerRadius;
@property (nonatomic, strong) UIColor * _Nonnull toolbarbackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull toolbarSeparatorLineColor;
@property (nonatomic, strong) UIColor * _Nonnull toolbarTintColor;
@property (nonatomic, strong) UIImage * _Nullable attachButtonImage;
@property (nonatomic, strong) UIColor * _Nonnull attachButtonColor;
@property (nonatomic, strong) UIColor * _Nonnull attachButtonHighlightColor;
@property (nonatomic) BOOL showAttachButton;
@property (nonatomic, strong) UIColor * _Nonnull sendButtonColor;
@property (nonatomic, strong) UIColor * _Nonnull sendButtonHighlightColor;
@property (nonatomic, strong) UIColor * _Nonnull sendButtonDisabledColor;
@property (nonatomic, strong) UIFont * _Nonnull sendButtonFont;
@property (nonatomic, strong) UIImage * _Nullable sendButtonImage;
@property (nonatomic, strong) UIFont * _Nonnull myMessageFont;
@property (nonatomic, strong) UIFont * _Nonnull toolbarQuotedMessageAuthorFont;
@property (nonatomic, strong) UIFont * _Nonnull toolbarQuotedMessageFont;
@property (nonatomic, strong) UIColor * _Nonnull toolbarQuotedMessageAuthorColor;
@property (nonatomic, strong) UIColor * _Nonnull toolbarQuotedMessageColor;
@property (nonatomic) BOOL toolbarInputHasBorder;
@property (nonatomic) CGFloat toolbarInputCornerRadius;
@property (nonatomic) CGFloat toolbarInputMinimumHeight;
@property (nonatomic) CGFloat toolbarInputMaximumHeight;
@property (nonatomic, strong) UIColor * _Nonnull toolbarInputTextColor;
@property (nonatomic, strong) UIColor * _Nonnull toolbarInputCursorColor;
@property (nonatomic, strong) UIColor * _Nonnull toolbarInputBackgroundColor;
@property (nonatomic) BOOL showWaitingForSpecialistProgress;
@property (nonatomic, strong) UIColor * _Nonnull waitingSpecialistSpinnerColor;
@property (nonatomic, strong) UIColor * _Nonnull waitingSpecialistBgColor;
@property (nonatomic, strong) UIColor * _Nonnull waitingSpecialistBorderColor;
@property (nonatomic) CGFloat waitingSpecialistBorderWidth;
@property (nonatomic, strong) UIFont * _Nonnull bubbleMessageFont;
@property (nonatomic, strong) UIFont * _Nonnull bubbleMessageAudioFont;
@property (nonatomic, strong) UIFont * _Nonnull bubbleTimeFont;
@property (nonatomic, strong) UIFont * _Nonnull failedMessageFont;
@property (nonatomic, strong) UIFont * _Nonnull messageHeaderFont;
@property (nonatomic, strong) UIColor * _Nonnull messageHeaderTextColor;
@property (nonatomic, strong) UIColor * _Nonnull messageDeletedTextColor;
@property (nonatomic, strong) UIImage * _Nullable messageEditedStatusImage;
@property (nonatomic, strong) UIFont * _Nonnull quoteAuthorFont;
@property (nonatomic, strong) UIFont * _Nonnull quoteMessageFont;
@property (nonatomic, strong) UIFont * _Nonnull quoteTimeFont;
@property (nonatomic, strong) UIFont * _Nonnull quoteFilesizeFont;
@property (nonatomic, strong) UIColor * _Nonnull quoteAuthorColor;
@property (nonatomic, strong) UIColor * _Nonnull quoteMessageColor;
@property (nonatomic, strong) UIColor * _Nonnull quoteBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull quoteAccentColor;
@property (nonatomic, strong) UIImage * _Nullable messageBubbleFilledMaskImage;
@property (nonatomic, strong) UIImage * _Nullable messageBubbleStrokedMaskImage;
@property (nonatomic) UIEdgeInsets messageBubbleFilledMaskInsets;
@property (nonatomic) UIEdgeInsets messageBubbleStrokedMaskInsets;
@property (nonatomic) CGFloat messageContainerRightOffset;
@property (nonatomic) CGFloat messageContainerLeftOffset;
/// Right value sets margin to the avatar image
/// Left value sets margin on the side opposite the avatar image
@property (nonatomic) UIEdgeInsets messageBubbleTextViewFrameInsets;
@property (nonatomic) UIEdgeInsets messageBubbleTextViewTextContainerInsets;
@property (nonatomic) CGFloat messageBubbleOppositeMargin;
@property (nonatomic, strong) UIColor * _Nonnull emptyImageColor;
@property (nonatomic, strong) UIColor * _Nonnull timeAndStatusBackgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull specialisConnectTitleFont;
@property (nonatomic, strong) UIFont * _Nonnull specialisConnectSubtitleFont;
@property (nonatomic, strong) UIColor * _Nonnull specialisConnectTitleColor;
@property (nonatomic, strong) UIColor * _Nonnull specialisConnectSubtitleColor;
@property (nonatomic, strong) UIFont * _Nonnull typingTextFont;
@property (nonatomic, strong) UIColor * _Nonnull typingTextColor;
@property (nonatomic, copy) NSString * _Nullable typingText;
@property (nonatomic, strong) UIColor * _Nullable typingIndicatorEllipsisColor;
@property (nonatomic, strong) UIImage * _Nullable scheduleIcon;
@property (nonatomic, strong) UIColor * _Nonnull scheduleAlertColor;
@property (nonatomic, strong) UIFont * _Nonnull scheduleAlertFont;
@property (nonatomic, strong) UIColor * _Nonnull scheduleIconBackgroundColor;
@property (nonatomic) BOOL scrollToLatest;
@property (nonatomic, strong) UIImage * _Nullable scrollToBottomImage;
@property (nonatomic, strong) UIColor * _Nonnull scrollToBottomBadgeColor;
@property (nonatomic, strong) UIColor * _Nonnull scrollToBottomBadgeTextColor;
@property (nonatomic) BOOL incomingBubbleStroked;
@property (nonatomic, strong) UIColor * _Nonnull incomingBubbleColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingBubbleTextColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingBubbleLinkColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingTimeColor;
@property (nonatomic) BOOL showIncomingAvatar;
@property (nonatomic, strong) UIColor * _Nonnull incomingQuoteSeparatorColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingQuoteAuthorColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingQuoteMessageColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingQuoteTimeColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingQuoteFilesizeColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingFileIconTintColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingFileIconBgColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingMediaTimeColor;
@property (nonatomic) CGFloat commonMessageAvatarSize;
@property (nonatomic) CGFloat systemMessageAvatarSize;
@property (nonatomic) CGFloat messageAvatarToBubbleOffset;
@property (nonatomic) BOOL failedBubbleStroked;
@property (nonatomic, strong) UIColor * _Nonnull failedBubbleColor;
@property (nonatomic) BOOL outgoingBubbleStroked;
@property (nonatomic, strong) UIColor * _Nonnull outgoingBubbleColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingBubbleTextColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingBubbleLinkColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingTimeColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingPendingStatusColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingDeliveredStatusColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingReadStatusColor;
@property (nonatomic, strong) UIImage * _Nullable outgoingPendingStatusImage;
@property (nonatomic, strong) UIImage * _Nullable outgoingDeliveredStatusImage;
@property (nonatomic, strong) UIImage * _Nullable outgoingReadStatusImage;
@property (nonatomic) BOOL showOutgoingAvatar;
@property (nonatomic, strong) UIImage * _Nullable avatarPlaceholderImage;
@property (nonatomic, strong) UIColor * _Nonnull outgoingQuoteSeparatorColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingQuoteAuthorColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingQuoteMessageColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingQuoteTimeColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingQuoteFilesizeColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingFileIconTintColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingFileIconBgColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingMediaTimeColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingMediaPendingStatusColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingMediaDeliveredStatusColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingMediaReadStatusColor;
@property (nonatomic, strong) UIColor * _Nonnull searchScopeBarTintColor;
@property (nonatomic, strong) UIColor * _Nonnull searchBarTextColor;
@property (nonatomic, strong) UIColor * _Nonnull searchBarTintColor;
@property (nonatomic, strong) UIFont * _Nonnull searchScopeBarFont;
@property (nonatomic, strong) UIFont * _Nonnull searchBarTextFont;
@property (nonatomic, strong) UIColor * _Nonnull searchBarIconTintColor;
@property (nonatomic) BOOL searchEnabled;
@property (nonatomic, strong) UIImage * _Nullable searchImageNotFound;
@property (nonatomic, strong) UIColor * _Nonnull searchTextColorNotFound;
@property (nonatomic, strong) UIFont * _Nonnull searchTextFontColorNotFound;
@property (nonatomic) BOOL searchIconDisabled;
@property (nonatomic, strong) UIImage * _Nullable clearSearchIcon;
@property (nonatomic, strong) UIColor * _Nonnull findedMessageHeaderTextColor;
@property (nonatomic, strong) UIColor * _Nonnull findedMessageHeaderBackgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull findedMessageHeaderTextFont;
@property (nonatomic, strong) UIColor * _Nonnull findMoreMessageTextColor;
@property (nonatomic, strong) UIFont * _Nonnull findMoreMessageTextFont;
@property (nonatomic, strong) UIColor * _Nonnull searchMessageAuthorTextColor;
@property (nonatomic, strong) UIColor * _Nonnull searchMessageTextColor;
@property (nonatomic, strong) UIColor * _Nonnull searchMessageDateTextColor;
@property (nonatomic, strong) UIColor * _Nonnull searchMessageFileTextColor;
@property (nonatomic, strong) UIColor * _Nonnull searchMessageMatchTextColor;
@property (nonatomic, strong) UIFont * _Nonnull searchMessageAuthorTextFont;
@property (nonatomic, strong) UIFont * _Nonnull searchMessageMatchTextFont;
@property (nonatomic, strong) UIFont * _Nonnull searchMessageTextFont;
@property (nonatomic, strong) UIFont * _Nonnull searchMessageFileTextFont;
@property (nonatomic, strong) UIFont * _Nonnull searchMessageDateTextFont;
/// Включает | Выключает загрузку  ссылок как превью
@property (nonatomic) BOOL linkPreviewEnabled;
@property (nonatomic, strong) UIColor * _Nonnull photoPickerBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull photoPickerToolbarTintColor;
@property (nonatomic, strong) UIFont * _Nonnull photoPickerToolbarButtonFont;
@property (nonatomic, strong) UIImage * _Nullable photoPickerCheckmarkIcon;
@property (nonatomic, strong) UIImage * _Nullable photoPickerEmptyCheckmarkIcon;
@property (nonatomic, strong) UIColor * _Nonnull photoPickerSheetTextColor;
@property (nonatomic, strong) UIFont * _Nonnull photoPickerSheetTextFont;
@property (nonatomic) BOOL useSystemFilePicker;
@property (nonatomic, strong) UIColor * _Nullable fileViewerTitleColor;
@property (nonatomic, strong) UIColor * _Nullable fileViewerNavBarBackgroundColor;
@property (nonatomic, strong) UIColor * _Nullable fileViewerNavBarTintColor;
@property (nonatomic, strong) UIColor * _Nonnull fileViewerBackgroundColor;
@property (nonatomic, strong) UIFont * _Nonnull fileViewerTitleFont;
@property (nonatomic) BOOL canShowSpecialistInfo;
@property (nonatomic, strong) UIColor * _Nonnull starRatingColorEnabled;
@property (nonatomic, strong) UIColor * _Nonnull likeRatingColorEnabled;
@property (nonatomic, strong) UIColor * _Nonnull starRatingColorDisabled;
@property (nonatomic, strong) UIColor * _Nonnull likeRatingColorDisabled;
@property (nonatomic, strong) UIColor * _Nonnull starRatingColorCompleted;
@property (nonatomic, strong) UIColor * _Nonnull likeRatingColorCompleted;
@property (nonatomic, strong) UIColor * _Nonnull likeLabelOnStarColor;
@property (nonatomic, strong) UIColor * _Nonnull likeLabelUnderStarColor;
@property (nonatomic, strong) UIColor * _Nonnull surveyTextColor;
@property (nonatomic, strong) UIFont * _Nonnull surveyTextFont;
@property (nonatomic, strong) UIColor * _Nonnull surveyCompletionColor;
@property (nonatomic, strong) UIFont * _Nonnull surveyCompletionFont;
@property (nonatomic) NSInteger surveyCompletionDelay;
@property (nonatomic, strong) UIImage * _Nullable iconStarRatingEmty;
@property (nonatomic, strong) UIImage * _Nullable iconStarRatingFull;
@property (nonatomic, strong) UIImage * _Nullable iconLikeEmpty;
@property (nonatomic, strong) UIImage * _Nullable iconDislikeEmpty;
@property (nonatomic, strong) UIImage * _Nullable iconLikeFull;
@property (nonatomic, strong) UIImage * _Nullable iconDislikeFull;
/// < Режим отображения
@property (nonatomic) enum THRQuickReplyPresentationMode quickReplyPresentationMode;
/// < Выравнивание по горизонтали
@property (nonatomic) enum THRQuickReplyAlignment quickReplyAlignment;
/// < Шрифт для кнопок быстрых ответов
@property (nonatomic, strong) UIFont * _Nonnull quickReplyFont;
/// < Радиус закругления кнопок быстрых ответов
@property (nonatomic, strong) NSNumber * _Nonnull quickReplyBorderCornerRadius;
/// < Цвет границы кнопок быстрых ответов
@property (nonatomic, strong) UIColor * _Nonnull quickReplyBorderColor;
/// < Цвет кнопок быстрых ответов
@property (nonatomic, strong) UIColor * _Nonnull quickReplyBackgroundColor;
/// < Цвет текста на кнопках быстрых ответов
@property (nonatomic, strong) UIColor * _Nonnull quickReplyTextColor;
/// <  Цвет подсветки кнопок быстрых ответов
@property (nonatomic, strong) UIColor * _Nonnull quickReplyBackgroundColorHighlighted;
/// < Цвет подстветки кнопок быстрых ответов
@property (nonatomic, strong) UIColor * _Nonnull quickReplyTextColorHighLighted;
/// < Высота кнопки быстрого ответа (в режиме embed)
@property (nonatomic) CGFloat quickReplyButtonHeight;
/// < Толщина границы кнопки быстрого ответа
@property (nonatomic) CGFloat quickReplyBorderWidth;
@property (nonatomic) BOOL voiceRecordingAllowed;
@property (nonatomic, strong) UIImage * _Nullable voiceMessageRecordButtonImage;
@property (nonatomic, strong) UIImage * _Nullable voiceMessageSendButtonImage;
@property (nonatomic, strong) UIColor * _Nonnull voiceMessageRecordSendButtonColor;
@property (nonatomic, strong) UIImage * _Nullable voiceMessagePlayImage;
@property (nonatomic, strong) UIImage * _Nullable voiceMessagePauseImage;
@property (nonatomic, strong) UIColor * _Nonnull incomingVoiceMessagePlayPauseColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingVoiceMessagePlayPauseColor;
@property (nonatomic, strong) UIColor * _Nonnull previewVoiceMessagePlayPauseColor;
@property (nonatomic, strong) UIColor * _Nonnull previewVoiceMessageBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull incomingVoiceMessageProgressColor;
@property (nonatomic, strong) UIColor * _Nonnull outgoingVoiceMessageProgressColor;
@property (nonatomic, strong) UIColor * _Nonnull previewVoiceMessageProgressColor;
@property (nonatomic) BOOL showCloseButton;
@property (nonatomic, strong) UIColor * _Nullable closeButtonColor;
@property (nonatomic, strong) UIImage * _Nullable closeButtonImage;
@property (nonatomic) BOOL newChatCenterApi;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable customHTTPHeadersForDataStore;
@property (nonatomic, strong) NSNumber * _Nonnull historyLoadingCount;
/// pragma mark - Access call didReceiveResponse in delegate
@property (nonatomic) BOOL callReceiveResponseEnabled;
@property (nonatomic) BOOL clearChatHistoryIfSocketReconnect;
@property (nonatomic) BOOL allowUntrustedSSLCertificate;
@property (nonatomic, copy) NSArray<THRCert *> * _Nonnull trustedCertificates;
/// < Включение категорий записи в лог [.off, .info, .network, .networkSock, .userInterface, .error, .all]
/// <ul>
///   <li>
///     Integer as OptionSet (NS_OPTIONS)
///   </li>
/// </ul>
@property (nonatomic, strong) ThreadsLogLevel * _Nonnull logLevels;
/// < Имя файла логгирования, если задать nil, то в файл писать не будет, только в Console через OSLog
@property (nonatomic, copy) NSString * _Nullable logFileName;
/// < Размер лог файлов в Мб
@property (nonatomic) NSInteger logFileSizeMb;
/// < Максимальное количество лог файлов в ротации
@property (nonatomic) NSInteger logFileMaxCount;
@property (nonatomic, copy) NSString * _Nonnull toastViewTextCopy;
@property (nonatomic, strong) UIColor * _Nonnull toastViewTextColor;
@property (nonatomic, strong) UIColor * _Nonnull toastViewBackgroundColor;
@property (nonatomic) CGSize toastViewSize;
@property (nonatomic) NSUInteger photoPickerMaxImagesCount;
@property (nonatomic, readonly, copy) NSString * _Nonnull debugDescription;
+ (THRAttributes * _Nonnull)defaultAttributes SWIFT_WARN_UNUSED_RESULT;
@end

/// Метод аутентификации
typedef SWIFT_ENUM(NSInteger, THRAuthMethod, open) {
/// < Аутентификация передается в headers
  THRAuthMethodHeaders = 0,
/// < Аутентификация передается в cookies
  THRAuthMethodCookies = 1,
};


SWIFT_CLASS_NAMED("THRCert")
@interface THRCert : NSObject
/// Initialization certificate if it is in any place, main bundle or other bundles
/// \param url URL for certificate’s file
///
- (nonnull instancetype)initWithContentsOf:(NSURL * _Nullable)url OBJC_DESIGNATED_INITIALIZER;
/// Initialization certificate if it is in main bundle
/// \param fileName String with name of file
///
- (nonnull instancetype)initWithContentsOfFile:(NSString * _Nonnull)fileName;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7Threads13THRClientInfo")
@interface THRClientInfo : NSObject <NSCopying>
- (nonnull instancetype)initWithClientId:(NSString * _Nonnull)clientId OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nonnull clientId;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable data;
@property (nonatomic, copy) NSString * _Nullable appMarker;
@property (nonatomic, copy) NSString * _Nullable signature;
@property (nonatomic, copy) NSString * _Nullable authToken;
@property (nonatomic, copy) NSString * _Nullable authSchema;
@property (nonatomic) enum THRAuthMethod authMethod;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)_ SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7Threads11THRControls")
@interface THRControls : NSObject
@property (nonatomic, strong) UIButton * _Nullable sendButton;
@property (nonatomic, strong) UIButton * _Nullable attachButton;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7Threads24THRHistoryLoadingOptions")
@interface THRHistoryLoadingOptions : NSObject
@property (nonatomic) BOOL firstLoading;
@property (nonatomic) BOOL keepContentOffset;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// The <code>JSQMessageAvatarImageDataSource</code> protocol defines the common interface through which
/// a <code>JSQMessagesViewController</code> and <code>JSQMessagesCollectionView</code> interact with avatar image model objects.
/// It declares the required and optional methods that a class must implement so that instances
/// of that class can be display properly within a <code>JSQMessagesCollectionViewCell</code>.
/// A concrete class that conforms to this protocol is provided in the library. See <code>JSQMessagesAvatarImage</code>.
/// seealso:
/// JSQMessagesAvatarImage.
SWIFT_PROTOCOL("_TtP7Threads34THRJSQMessageAvatarImageDataSource_")
@protocol THRJSQMessageAvatarImageDataSource <NSObject>
/// remark:
/// You may return <code>nil</code> from this method while the image is being downloaded.
///
/// returns:
/// The avatar image for a regular display state.
@property (nonatomic, strong) UIImage * _Nullable avatarImage;
/// remark:
/// You may return <code>nil</code> from this method if this does not apply.
///
/// returns:
/// The avatar image for a highlighted display state.
@property (nonatomic, strong) UIImage * _Nullable avatarHighlightedImage;
/// remark:
/// If you do not need support for a placeholder image, that is, your images
/// are stored locally on the device, then you may simply return the same value as avatarImage here.
/// @warning You must not return <code>nil</code> from this method.
///
/// returns:
/// A placeholder avatar image to be displayed if avatarImage is not yet available, or <code>nil</code>.
/// For example, if avatarImage needs to be downloaded, this placeholder image
/// will be used until avatarImage is not <code>nil</code>.
@property (nonatomic, readonly, strong) UIImage * _Nonnull avatarPlaceholderImage;
@end


SWIFT_CLASS("_TtC7Threads14THRMessageInfo")
@interface THRMessageInfo : NSObject
- (nonnull instancetype)initWithText:(NSString * _Nullable)text senderName:(NSString * _Nonnull)senderName hasAttachment:(BOOL)hasAttachment OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// Выравнивание по горизонтали быстрых ответов
typedef SWIFT_ENUM(NSUInteger, THRQuickReplyAlignment, open) {
/// < Выравнивание по центру
  THRQuickReplyAlignmentCenter = 0,
/// < Выравнивание по левому краю
  THRQuickReplyAlignmentLeft = 1,
/// < Выравнивание по правому краю
  THRQuickReplyAlignmentRight = 2,
};

/// Режимы отображения быстрых ответов
typedef SWIFT_ENUM(NSUInteger, THRQuickReplyPresentationMode, open) {
/// < Показ кнопок быстрых ответов в всплывающей панели
  THRQuickReplyPresentationModeToolbar = 0,
/// < Показ кнопок быстрых ответов в потоке сообщений
  THRQuickReplyPresentationModeEmbed = 1,
};


SWIFT_CLASS("_TtC7Threads17THRRequestConfigs")
@interface THRRequestConfigs : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) SocketSettings * _Nonnull socket;
@property (nonatomic, strong) HttpSettings * _Nonnull http;
@property (nonatomic, readonly, copy) NSString * _Nonnull debugDescription;
@end


SWIFT_CLASS("_TtC7Threads16THRRoutingParams")
@interface THRRoutingParams : NSObject
- (nonnull instancetype)initWithPriority:(NSInteger)priority skillId:(NSInteger)skillId expiredAt:(NSString * _Nullable)expiredAt OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary<NSString *, id> * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7Threads17THRSettingsShadow")
@interface THRSettingsShadow : NSObject
/// init Settings for shadow
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     opacity: CGFloat, Shadow opacity (default: 1.0)
///   </li>
///   <li>
///     radius:  CGFloat, Shadow radius (default: 2.0)
///   </li>
///   <li>
///     offset: CGSize, Shadow offset (default: CGSize(width: 2.0, height: 2.0)
///   </li>
///   <li>
///     color: UIColor, Shadow color (default: black)
///   </li>
/// </ul>
- (nonnull instancetype)initWithOpacity:(CGFloat)opacity radius:(CGFloat)radius offset:(CGSize)offset color:(UIColor * _Nonnull)color OBJC_DESIGNATED_INITIALIZER;
/// Shadow opacity
@property (nonatomic, readonly) CGFloat opacity;
/// Shadow radius
@property (nonatomic, readonly) CGFloat radius;
/// Shadow offset
@property (nonatomic, readonly) CGSize offset;
/// Shadow color
@property (nonatomic, readonly, strong) UIColor * _Nonnull color;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol ThreadsDelegate;

SWIFT_CLASS("_TtC7Threads7Threads")
@interface Threads : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@property (nonatomic) enum THRAPIVersion apiVersion;
@property (nonatomic) BOOL isClientIdEncrypted;
@property (nonatomic) BOOL isShowsNetworkActivity;
@property (nonatomic, readonly, copy) NSString * _Nullable clientId;
@property (nonatomic, readonly, copy) NSString * _Nullable clientName;
@property (nonatomic, readonly, copy) NSString * _Nullable appMarker;
@property (nonatomic, readonly, copy) NSString * _Nullable clientSignature;
@property (nonatomic, readonly, copy) NSString * _Nullable clientAuthToken;
@property (nonatomic, readonly, copy) NSString * _Nullable clientAuthSchema;
@property (nonatomic, readonly) BOOL isClientSet;
@property (nonatomic, readonly, copy) NSString * _Nullable data;
@property (nonatomic, readonly, strong) THRAttributes * _Nonnull attributes;
@property (nonatomic, readonly, strong) THRControls * _Nonnull controls;
@property (nonatomic, copy) NSURL * _Nullable restURL;
@property (nonatomic, copy) NSURL * _Nullable dataStoreURL;
@property (nonatomic, readonly) NSTimeInterval lastActivitySeconds;
@property (nonatomic) BOOL keepSocketActive;
@property (nonatomic) BOOL disableUserInput;
+ (Threads * _Nonnull)threads SWIFT_WARN_UNUSED_RESULT;
- (void)configureTransportProtocolWith:(id <ThreadsDelegate> _Nullable)delegate webSocketURL:(NSURL * _Nonnull)webSocketURL providerUid:(NSString * _Nonnull)providerUid restURL:(NSURL * _Nonnull)restURL dataStoreURL:(NSURL * _Nonnull)dataStoreURL;
- (void)registerApplicationForRemoteNotificationsStandartOptionsWithAuthorizationStatusDenied:(void (^ _Nullable)(void))authorizationStatusDenied completionHandler:(void (^ _Nonnull)(NSData * _Nullable))completionHandler;
- (void)applicationDidRegisterForRemoteNotificationsWithDeviceToken:(NSData * _Nonnull)deviceToken;
- (void)updateLocationWithLatitude:(NSNumber * _Nonnull)latitude longitude:(NSNumber * _Nonnull)longitude;
- (void)setClientInfo:(THRClientInfo * _Nonnull)clientInfo;
- (void)updateClientInfo:(THRClientInfo * _Nonnull)clientInfo;
- (void)logout;
- (void)logoutWithClientId:(NSString * _Nonnull)clientId;
- (void)handlePushNotificationUserInfo:(NSDictionary * _Nonnull)userInfo;
- (NSString * _Nonnull)version SWIFT_WARN_UNUSED_RESULT;
- (NSUInteger)unreadMessagesCount SWIFT_WARN_UNUSED_RESULT;
- (void)clearCachedFiles;
- (BOOL)isThreadsOriginPushUserInfo:(NSDictionary * _Nonnull)userInfo SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getAppMarkerFromPushUserInfo:(NSDictionary * _Nonnull)userInfo SWIFT_WARN_UNUSED_RESULT;
- (void)sendMessageWithText:(NSString * _Nonnull)withText completion:(void (^ _Nullable)(NSError * _Nullable))completion;
- (void)registerUserWith:(THRClientInfo * _Nonnull)clientInfo messageWithText:(NSString * _Nullable)text;
- (void)sendMessageWith:(UIImage * _Nonnull)image completion:(void (^ _Nullable)(NSError * _Nullable))completion;
- (UIViewController * _Nonnull)chatViewControllerWith:(THRAttributes * _Nonnull)attributes SWIFT_WARN_UNUSED_RESULT;
- (UIViewController * _Nonnull)chatViewControllerWith:(THRAttributes * _Nonnull)attributes completionHandler:(void (^ _Nullable)(NSError * _Nullable))completionHandler SWIFT_WARN_UNUSED_RESULT;
- (UIViewController * _Nonnull)chatViewControllerWith:(THRAttributes * _Nonnull)attributes pushUserInfo:(NSDictionary * _Nonnull)pushUserInfo completionHandler:(void (^ _Nullable)(NSError * _Nullable))completionHandler SWIFT_WARN_UNUSED_RESULT;
@end

@protocol ThreadsPreloadView;

SWIFT_PROTOCOL("_TtP7Threads15ThreadsDelegate_")
@protocol ThreadsDelegate
- (void)threads:(Threads * _Nonnull)threads didReceiveError:(NSError * _Nonnull)error;
- (void)threads:(Threads * _Nonnull)threads unreadMessagesCount:(NSUInteger)unreadMessagesCount;
- (void)threads:(Threads * _Nonnull)threads didChangeDeviceAddress:(NSString * _Nonnull)deviceAddress;
@optional
- (BOOL)threads:(Threads * _Nonnull)threads allowOpenUrl:(NSURL * _Nonnull)allowOpenUrl SWIFT_WARN_UNUSED_RESULT;
- (id <ThreadsPreloadView> _Null_unspecified)customPreloadView SWIFT_WARN_UNUSED_RESULT;
- (void)threads:(Threads * _Nonnull)threads didReceiveMessage:(THRMessageInfo * _Nonnull)message;
@end


SWIFT_CLASS_NAMED("ThreadsLogLevel")
@interface ThreadsLogLevel : NSObject
/// LogValue main init
/// \param rawValue Integer as OptionSet (NS_OPTIONS)
///
- (nonnull instancetype)initWithRawValue:(NSInteger)rawValue OBJC_DESIGNATED_INITIALIZER;
/// Off all logging
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ThreadsLogLevel * _Nonnull off;)
+ (ThreadsLogLevel * _Nonnull)off SWIFT_WARN_UNUSED_RESULT;
/// INFO level logging
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ThreadsLogLevel * _Nonnull info;)
+ (ThreadsLogLevel * _Nonnull)info SWIFT_WARN_UNUSED_RESULT;
/// NETWORK level logging
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ThreadsLogLevel * _Nonnull network;)
+ (ThreadsLogLevel * _Nonnull)network SWIFT_WARN_UNUSED_RESULT;
/// NETWORK-SOCK level logging
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ThreadsLogLevel * _Nonnull networkSock;)
+ (ThreadsLogLevel * _Nonnull)networkSock SWIFT_WARN_UNUSED_RESULT;
/// USER-INTERFACE level logging
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ThreadsLogLevel * _Nonnull userInterface;)
+ (ThreadsLogLevel * _Nonnull)userInterface SWIFT_WARN_UNUSED_RESULT;
/// ERROR level logging
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ThreadsLogLevel * _Nonnull error;)
+ (ThreadsLogLevel * _Nonnull)error SWIFT_WARN_UNUSED_RESULT;
/// All levels of logging are On
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ThreadsLogLevel * _Nonnull all;)
+ (ThreadsLogLevel * _Nonnull)all SWIFT_WARN_UNUSED_RESULT;
/// LogLevel primitive value
@property (nonatomic, readonly) NSInteger rawValue;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP7Threads18ThreadsPreloadView_")
@protocol ThreadsPreloadView
- (void)startAnimation;
- (void)stopAnimation;
- (UIView * _Null_unspecified)getView SWIFT_WARN_UNUSED_RESULT;
@end








@interface UIView (SWIFT_EXTENSION(Threads))
- (void)addContainedView:(UIView * _Nonnull)inSubView;
@end

@class UITextRange;
@class UIGestureRecognizer;
@class NSTextContainer;

/// UITextView без возможности выделять текст, но с открытием ссылок
/// Basically, it disables unwanted UIGestureRecognizer from UITextView.
/// https://stackoverflow.com/a/49428307/1033581
SWIFT_CLASS("_TtC7Threads20UnselectableTextView")
@interface UnselectableTextView : UITextView
@property (nonatomic, strong) UITextRange * _Nullable selectedTextRange;
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)gestureRecognizer SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame textContainer:(NSTextContainer * _Nullable)textContainer OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=7.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("UploadDataRequest")
@interface THRUploadDataRequest : NSObject
- (void)uploadWithFile:(NSString * _Nonnull)name with:(NSData * _Nonnull)data completionHandler:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
